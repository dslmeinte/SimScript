/*
* generated by Xtext
*/
grammar InternalSimUiDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package nl.dslmeinte.simscript.ui.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package nl.dslmeinte.simscript.ui.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import nl.dslmeinte.simscript.ui.services.SimUiDslGrammarAccess;

}

@parser::members {

 	private SimUiDslGrammarAccess grammarAccess;
 	
    public InternalSimUiDslParser(TokenStream input, SimUiDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "UiModule";	
   	}
   	
   	@Override
   	protected SimUiDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleUiModule
entryRuleUiModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUiModuleRule()); }
	 iv_ruleUiModule=ruleUiModule 
	 { $current=$iv_ruleUiModule.current; } 
	 EOF 
;

// Rule UiModule
ruleUiModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUiModuleAccess().getUiModuleAction_0(),
            $current);
    }
)	otherlv_1='ui-module' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUiModuleAccess().getUiModuleKeyword_1());
    }
(
(
		lv_notAuthenticated_2_0=	'not-authenticated' 
    {
        newLeafNode(lv_notAuthenticated_2_0, grammarAccess.getUiModuleAccess().getNotAuthenticatedNotAuthenticatedKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUiModuleRule());
	        }
       		setWithLastConsumed($current, "notAuthenticated", true, "not-authenticated");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUiModuleAccess().getDefinitionsTopLevelDefinitionParserRuleCall_3_0()); 
	    }
		lv_definitions_3_0=ruleTopLevelDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUiModuleRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_3_0, 
        		"TopLevelDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleTopLevelDefinition
entryRuleTopLevelDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTopLevelDefinitionRule()); }
	 iv_ruleTopLevelDefinition=ruleTopLevelDefinition 
	 { $current=$iv_ruleTopLevelDefinition.current; } 
	 EOF 
;

// Rule TopLevelDefinition
ruleTopLevelDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTopLevelDefinitionAccess().getViewableParserRuleCall_0()); 
    }
    this_Viewable_0=ruleViewable
    { 
        $current = $this_Viewable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopLevelDefinitionAccess().getTableRowsDefinitionParserRuleCall_1()); 
    }
    this_TableRowsDefinition_1=ruleTableRowsDefinition
    { 
        $current = $this_TableRowsDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTopLevelDefinitionAccess().getMethodDefinitionParserRuleCall_2()); 
    }
    this_MethodDefinition_2=ruleMethodDefinition
    { 
        $current = $this_MethodDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTableRowsDefinition
entryRuleTableRowsDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableRowsDefinitionRule()); }
	 iv_ruleTableRowsDefinition=ruleTableRowsDefinition 
	 { $current=$iv_ruleTableRowsDefinition.current; } 
	 EOF 
;

// Rule TableRowsDefinition
ruleTableRowsDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='table-rows' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableRowsDefinitionAccess().getTableRowsKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTableRowsDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRowsDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableRowsDefinitionAccess().getParameterListParameterListParserRuleCall_2_0()); 
	    }
		lv_parameterList_2_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRowsDefinitionRule());
	        }
       		set(
       			$current, 
       			"parameterList",
        		lv_parameterList_2_0, 
        		"ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableRowsDefinitionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableRowsDefinitionAccess().getRowsTableRowParserRuleCall_4_0()); 
	    }
		lv_rows_4_0=ruleTableRow		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRowsDefinitionRule());
	        }
       		add(
       			$current, 
       			"rows",
        		lv_rows_4_0, 
        		"TableRow");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTableRowsDefinitionAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleViewable
entryRuleViewable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getViewableRule()); }
	 iv_ruleViewable=ruleViewable 
	 { $current=$iv_ruleViewable.current; } 
	 EOF 
;

// Rule Viewable
ruleViewable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getViewableAccess().getDefinedViewableParserRuleCall_0()); 
    }
    this_DefinedViewable_0=ruleDefinedViewable
    { 
        $current = $this_DefinedViewable_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getViewableAccess().getManualViewableParserRuleCall_1()); 
    }
    this_ManualViewable_1=ruleManualViewable
    { 
        $current = $this_ManualViewable_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefinedViewable
entryRuleDefinedViewable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinedViewableRule()); }
	 iv_ruleDefinedViewable=ruleDefinedViewable 
	 { $current=$iv_ruleDefinedViewable.current; } 
	 EOF 
;

// Rule DefinedViewable
ruleDefinedViewable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDefinedViewableAccess().getTypeViewableTypesEnumRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleViewableTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinedViewableRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"ViewableTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDefinedViewableAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinedViewableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinedViewableAccess().getParameterListParameterListParserRuleCall_2_0()); 
	    }
		lv_parameterList_2_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinedViewableRule());
	        }
       		set(
       			$current, 
       			"parameterList",
        		lv_parameterList_2_0, 
        		"ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefinedViewableAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinedViewableAccess().getValuesBlockValuesBlockParserRuleCall_4_0()); 
	    }
		lv_valuesBlock_4_0=ruleValuesBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinedViewableRule());
	        }
       		set(
       			$current, 
       			"valuesBlock",
        		lv_valuesBlock_4_0, 
        		"ValuesBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDefinedViewableAccess().getDefinitionsLocalViewableDefinitionParserRuleCall_5_0()); 
	    }
		lv_definitions_5_0=ruleLocalViewableDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefinedViewableRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_5_0, 
        		"LocalViewableDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDefinedViewableAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleManualViewable
entryRuleManualViewable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getManualViewableRule()); }
	 iv_ruleManualViewable=ruleManualViewable 
	 { $current=$iv_ruleManualViewable.current; } 
	 EOF 
;

// Rule ManualViewable
ruleManualViewable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='manual' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getManualViewableAccess().getManualKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getManualViewableAccess().getTypeViewableTypesEnumRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleViewableTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getManualViewableRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ViewableTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getManualViewableAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getManualViewableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getManualViewableAccess().getParameterListParameterListParserRuleCall_3_0()); 
	    }
		lv_parameterList_3_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getManualViewableRule());
	        }
       		set(
       			$current, 
       			"parameterList",
        		lv_parameterList_3_0, 
        		"ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='in' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getManualViewableAccess().getInKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getManualViewableAccess().getNamespaceQualifiedNameParserRuleCall_5_0()); 
	    }
		lv_namespace_5_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getManualViewableRule());
	        }
       		set(
       			$current, 
       			"namespace",
        		lv_namespace_5_0, 
        		"QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Entry rule entryRuleLocalViewableDefinition
entryRuleLocalViewableDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalViewableDefinitionRule()); }
	 iv_ruleLocalViewableDefinition=ruleLocalViewableDefinition 
	 { $current=$iv_ruleLocalViewableDefinition.current; } 
	 EOF 
;

// Rule LocalViewableDefinition
ruleLocalViewableDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLocalViewableDefinitionAccess().getElementParserRuleCall_0()); 
    }
    this_Element_0=ruleElement
    { 
        $current = $this_Element_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLocalViewableDefinitionAccess().getMethodDefinitionParserRuleCall_1()); 
    }
    this_MethodDefinition_1=ruleMethodDefinition
    { 
        $current = $this_MethodDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleValuesBlock
entryRuleValuesBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValuesBlockRule()); }
	 iv_ruleValuesBlock=ruleValuesBlock 
	 { $current=$iv_ruleValuesBlock.current; } 
	 EOF 
;

// Rule ValuesBlock
ruleValuesBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getValuesBlockAccess().getValuesBlockAction_0(),
            $current);
    }
)	otherlv_1='values' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValuesBlockAccess().getValuesKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getValuesBlockAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValuesBlockAccess().getDeclarationsValueDeclarationParserRuleCall_3_0()); 
	    }
		lv_declarations_3_0=ruleValueDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValuesBlockRule());
	        }
       		add(
       			$current, 
       			"declarations",
        		lv_declarations_3_0, 
        		"ValueDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getValuesBlockAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleValueDeclaration
entryRuleValueDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueDeclarationRule()); }
	 iv_ruleValueDeclaration=ruleValueDeclaration 
	 { $current=$iv_ruleValueDeclaration.current; } 
	 EOF 
;

// Rule ValueDeclaration
ruleValueDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getValueDeclarationAccess().getValueValueParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueDeclarationRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValueDeclarationAccess().getColonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueDeclarationAccess().getDeclaredTypeTypeLiteralParserRuleCall_1_1_0()); 
	    }
		lv_declaredType_2_0=ruleTypeLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueDeclarationRule());
	        }
       		set(
       			$current, 
       			"declaredType",
        		lv_declaredType_2_0, 
        		"TypeLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getValueDeclarationAccess().getValueTypeValueTypesEnumRuleCall_2_0_0()); 
	    }
		lv_valueType_3_0=ruleValueTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueDeclarationRule());
	        }
       		set(
       			$current, 
       			"valueType",
        		lv_valueType_3_0, 
        		"ValueTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getValueDeclarationAccess().getValueExprExpressionParserRuleCall_2_1_0()); 
	    }
		lv_valueExpr_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueDeclarationRule());
	        }
       		set(
       			$current, 
       			"valueExpr",
        		lv_valueExpr_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getValueAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;







// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeLiteralParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleTypeLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"TypeLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameterList
entryRuleParameterList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterListRule()); }
	 iv_ruleParameterList=ruleParameterList 
	 { $current=$iv_ruleParameterList.current; } 
	 EOF 
;

// Rule ParameterList
ruleParameterList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterListAccess().getParameterListAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_2_0_0()); 
	    }
		lv_parameters_2_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterListRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_2_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getParameterListAccess().getCommaKeyword_2_1_0_0());
    }

    |	otherlv_4='|' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getVerticalLineKeyword_2_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterListAccess().getParametersParameterParserRuleCall_2_1_1_0()); 
	    }
		lv_parameters_5_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterListRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getParameterListAccess().getCommaKeyword_3());
    }
)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParameterListAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleMethodDefinition
entryRuleMethodDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodDefinitionRule()); }
	 iv_ruleMethodDefinition=ruleMethodDefinition 
	 { $current=$iv_ruleMethodDefinition.current; } 
	 EOF 
;

// Rule MethodDefinition
ruleMethodDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='method' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMethodDefinitionAccess().getMethodKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodDefinitionAccess().getMethodMethodParserRuleCall_1_0()); 
	    }
		lv_method_1_0=ruleMethod		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodDefinitionRule());
	        }
       		set(
       			$current, 
       			"method",
        		lv_method_1_0, 
        		"Method");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodDefinitionAccess().getParameterListParameterListParserRuleCall_2_0()); 
	    }
		lv_parameterList_2_0=ruleParameterList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodDefinitionRule());
	        }
       		set(
       			$current, 
       			"parameterList",
        		lv_parameterList_2_0, 
        		"ParameterList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodDefinitionAccess().getStatementBlockStatementBlockParserRuleCall_3_0()); 
	    }
		lv_statementBlock_3_0=ruleStatementBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodDefinitionRule());
	        }
       		set(
       			$current, 
       			"statementBlock",
        		lv_statementBlock_3_0, 
        		"StatementBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMethod
entryRuleMethod returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodRule()); }
	 iv_ruleMethod=ruleMethod 
	 { $current=$iv_ruleMethod.current; } 
	 EOF 
;

// Rule Method
ruleMethod returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getElementAccess().getQuotationParserRuleCall_0()); 
    }
    this_Quotation_0=ruleQuotation
    { 
        $current = $this_Quotation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getBindingParserRuleCall_1()); 
    }
    this_Binding_1=ruleBinding
    { 
        $current = $this_Binding_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getComponentInvocationParserRuleCall_2()); 
    }
    this_ComponentInvocation_2=ruleComponentInvocation
    { 
        $current = $this_ComponentInvocation_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getBlockElementParserRuleCall_3()); 
    }
    this_BlockElement_3=ruleBlockElement
    { 
        $current = $this_BlockElement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getListElementParserRuleCall_4()); 
    }
    this_ListElement_4=ruleListElement
    { 
        $current = $this_ListElement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getTableElementParserRuleCall_5()); 
    }
    this_TableElement_5=ruleTableElement
    { 
        $current = $this_TableElement_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getLabeledTableElementParserRuleCall_6()); 
    }
    this_LabeledTableElement_6=ruleLabeledTableElement
    { 
        $current = $this_LabeledTableElement_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getProgressBarTabSetParserRuleCall_7()); 
    }
    this_ProgressBarTabSet_7=ruleProgressBarTabSet
    { 
        $current = $this_ProgressBarTabSet_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getGroupElementParserRuleCall_8()); 
    }
    this_GroupElement_8=ruleGroupElement
    { 
        $current = $this_GroupElement_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getWhenElementParserRuleCall_9()); 
    }
    this_WhenElement_9=ruleWhenElement
    { 
        $current = $this_WhenElement_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getInputElementParserRuleCall_10()); 
    }
    this_InputElement_10=ruleInputElement
    { 
        $current = $this_InputElement_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getButtonElementParserRuleCall_11()); 
    }
    this_ButtonElement_11=ruleButtonElement
    { 
        $current = $this_ButtonElement_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getCountdownTimerParserRuleCall_12()); 
    }
    this_CountdownTimer_12=ruleCountdownTimer
    { 
        $current = $this_CountdownTimer_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getCalendarElementParserRuleCall_13()); 
    }
    this_CalendarElement_13=ruleCalendarElement
    { 
        $current = $this_CalendarElement_13.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getTimeSlotListElementParserRuleCall_14()); 
    }
    this_TimeSlotListElement_14=ruleTimeSlotListElement
    { 
        $current = $this_TimeSlotListElement_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getSlotAddElementParserRuleCall_15()); 
    }
    this_SlotAddElement_15=ruleSlotAddElement
    { 
        $current = $this_SlotAddElement_15.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getImageElementParserRuleCall_16()); 
    }
    this_ImageElement_16=ruleImageElement
    { 
        $current = $this_ImageElement_16.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getFrameElementParserRuleCall_17()); 
    }
    this_FrameElement_17=ruleFrameElement
    { 
        $current = $this_FrameElement_17.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getLineBreakElementParserRuleCall_18()); 
    }
    this_LineBreakElement_18=ruleLineBreakElement
    { 
        $current = $this_LineBreakElement_18.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getObserveElementParserRuleCall_19()); 
    }
    this_ObserveElement_19=ruleObserveElement
    { 
        $current = $this_ObserveElement_19.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getLabeledTableRowParserRuleCall_20()); 
    }
    this_LabeledTableRow_20=ruleLabeledTableRow
    { 
        $current = $this_LabeledTableRow_20.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleQuotation
entryRuleQuotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuotationRule()); }
	 iv_ruleQuotation=ruleQuotation 
	 { $current=$iv_ruleQuotation.current; } 
	 EOF 
;

// Rule Quotation
ruleQuotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getQuotationAccess().getPathExpressionParserRuleCall_0()); 
	    }
		lv_path_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQuotationRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	 iv_ruleBinding=ruleBinding 
	 { $current=$iv_ruleBinding.current; } 
	 EOF 
;

// Rule Binding
ruleBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='bind' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBindingAccess().getBindKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBindingAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingAccess().getBindSiteExpressionParserRuleCall_2_0()); 
	    }
		lv_bindSite_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingRule());
	        }
       		set(
       			$current, 
       			"bindSite",
        		lv_bindSite_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBindingAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleElementBody
entryRuleElementBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementBodyRule()); }
	 iv_ruleElementBody=ruleElementBody 
	 { $current=$iv_ruleElementBody.current; } 
	 EOF 
;

// Rule ElementBody
ruleElementBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getElementBodyAccess().getElementBodyAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElementBodyAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementBodyAccess().getElementsElementParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementBodyRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElementBodyAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleComponentInvocation
entryRuleComponentInvocation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentInvocationRule()); }
	 iv_ruleComponentInvocation=ruleComponentInvocation 
	 { $current=$iv_ruleComponentInvocation.current; } 
	 EOF 
;

// Rule ComponentInvocation
ruleComponentInvocation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='embed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComponentInvocationAccess().getEmbedKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentInvocationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getComponentInvocationAccess().getViewableViewableCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentInvocationAccess().getArgumentListArgumentListParserRuleCall_2_0()); 
	    }
		lv_argumentList_2_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentInvocationRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_2_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	 iv_ruleArgument=ruleArgument 
	 { $current=$iv_ruleArgument.current; } 
	 EOF 
;

// Rule Argument
ruleArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getArgumentAccess().getParameterParameterCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgumentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getValueExprExpressionParserRuleCall_2_0()); 
	    }
		lv_valueExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		set(
       			$current, 
       			"valueExpr",
        		lv_valueExpr_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleArgumentList
entryRuleArgumentList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentListRule()); }
	 iv_ruleArgumentList=ruleArgumentList 
	 { $current=$iv_ruleArgumentList.current; } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getArgumentListAccess().getArgumentListAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgumentListAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentListAccess().getArgumentsArgumentParserRuleCall_2_0_0()); 
	    }
		lv_arguments_2_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentListRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_2_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArgumentListAccess().getCommaKeyword_2_1_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentListAccess().getArgumentsArgumentParserRuleCall_2_1_1_0()); 
	    }
		lv_arguments_4_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentListRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArgumentListAccess().getCommaKeyword_2_2());
    }
)?)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArgumentListAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleInputElement
entryRuleInputElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputElementRule()); }
	 iv_ruleInputElement=ruleInputElement 
	 { $current=$iv_ruleInputElement.current; } 
	 EOF 
;

// Rule InputElement
ruleInputElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='input' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInputElementAccess().getInputKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputElementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputElementAccess().getBindSiteExpressionParserRuleCall_2_0()); 
	    }
		lv_bindSite_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputElementRule());
	        }
       		set(
       			$current, 
       			"bindSite",
        		lv_bindSite_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='hint' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInputElementAccess().getHintKeyword_3_0_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInputElementAccess().getEqualsSignKeyword_3_0_1());
    }
(
(
		lv_hint_6_0=RULE_STRING
		{
			newLeafNode(lv_hint_6_0, grammarAccess.getInputElementAccess().getHintSTRINGTerminalRuleCall_3_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"hint",
        		lv_hint_6_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_7='min' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInputElementAccess().getMinKeyword_3_1_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInputElementAccess().getEqualsSignKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputElementAccess().getMinValueExpressionParserRuleCall_3_1_2_0()); 
	    }
		lv_minValue_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputElementRule());
	        }
       		set(
       			$current, 
       			"minValue",
        		lv_minValue_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 2);
	 				}
					({true}?=>(	otherlv_10='max' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInputElementAccess().getMaxKeyword_3_2_0());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInputElementAccess().getEqualsSignKeyword_3_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputElementAccess().getMaxValueExpressionParserRuleCall_3_2_2_0()); 
	    }
		lv_maxValue_12_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputElementRule());
	        }
       		set(
       			$current, 
       			"maxValue",
        		lv_maxValue_12_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 3);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getInputElementAccess().getRadioOptionRadioOptionParserRuleCall_3_3_0()); 
	    }
		lv_radioOption_13_0=ruleRadioOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputElementRule());
	        }
       		set(
       			$current, 
       			"radioOption",
        		lv_radioOption_13_0, 
        		"RadioOption");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 4);
	 				}
					({true}?=>(	otherlv_14='onChange' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInputElementAccess().getOnChangeKeyword_3_4_0());
    }
	otherlv_15='=' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getInputElementAccess().getEqualsSignKeyword_3_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputElementAccess().getOnChangeExpressionParserRuleCall_3_4_2_0()); 
	    }
		lv_onChange_16_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputElementRule());
	        }
       		set(
       			$current, 
       			"onChange",
        		lv_onChange_16_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 5);
	 				}
					({true}?=>(	otherlv_17='onSubmit' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getInputElementAccess().getOnSubmitKeyword_3_5_0());
    }
	otherlv_18='=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getInputElementAccess().getEqualsSignKeyword_3_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInputElementAccess().getOnSubmitExpressionParserRuleCall_3_5_2_0()); 
	    }
		lv_onSubmit_19_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputElementRule());
	        }
       		set(
       			$current, 
       			"onSubmit",
        		lv_onSubmit_19_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getInputElementAccess().getUnorderedGroup_3(), 6);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getInputElementAccess().getStructureOptionStructureOptionParserRuleCall_3_6_0()); 
	    }
		lv_structureOption_20_0=ruleStructureOption		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputElementRule());
	        }
       		set(
       			$current, 
       			"structureOption",
        		lv_structureOption_20_0, 
        		"StructureOption");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getInputElementAccess().getUnorderedGroup_3());
	}

)	otherlv_21=')' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getInputElementAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleRadioOption
entryRuleRadioOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRadioOptionRule()); }
	 iv_ruleRadioOption=ruleRadioOption 
	 { $current=$iv_ruleRadioOption.current; } 
	 EOF 
;

// Rule RadioOption
ruleRadioOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='radio' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRadioOptionAccess().getRadioKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRadioOptionAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRadioOptionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		lv_true_3_0=RULE_STRING
		{
			newLeafNode(lv_true_3_0, grammarAccess.getRadioOptionAccess().getTrueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRadioOptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"true",
        		lv_true_3_0, 
        		"STRING");
	    }

)
)	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRadioOptionAccess().getSolidusKeyword_4());
    }
(
(
		lv_false_5_0=RULE_STRING
		{
			newLeafNode(lv_false_5_0, grammarAccess.getRadioOptionAccess().getFalseSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRadioOptionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"false",
        		lv_false_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRadioOptionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleStructureOption
entryRuleStructureOption returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructureOptionRule()); }
	 iv_ruleStructureOption=ruleStructureOption 
	 { $current=$iv_ruleStructureOption.current; } 
	 EOF 
;

// Rule StructureOption
ruleStructureOption returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='source' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructureOptionAccess().getSourceKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStructureOptionAccess().getEqualsSignKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructureOptionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructureOptionAccess().getSourceExprExpressionParserRuleCall_3_0()); 
	    }
		lv_sourceExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureOptionRule());
	        }
       		set(
       			$current, 
       			"sourceExpr",
        		lv_sourceExpr_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStructureOptionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructureOptionRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getStructureOptionAccess().getDisplayFunctionMethodCrossReference_5_0()); 
	}

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStructureOptionAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleButtonElement
entryRuleButtonElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getButtonElementRule()); }
	 iv_ruleButtonElement=ruleButtonElement 
	 { $current=$iv_ruleButtonElement.current; } 
	 EOF 
;

// Rule ButtonElement
ruleButtonElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='button' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getButtonElementAccess().getButtonKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getButtonElementAccess().getLeftParenthesisKeyword_1());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='text' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getButtonElementAccess().getTextKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		lv_text_5_0=RULE_STRING
		{
			newLeafNode(lv_text_5_0, grammarAccess.getButtonElementAccess().getTextSTRINGTerminalRuleCall_2_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_5_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='onClick' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getButtonElementAccess().getOnClickKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getButtonElementAccess().getActionExpressionParserRuleCall_2_1_2_0()); 
	    }
		lv_action_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getButtonElementRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getButtonElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='class' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getButtonElementAccess().getClassKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getButtonElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		lv_cssClass_11_0=RULE_STRING
		{
			newLeafNode(lv_cssClass_11_0, grammarAccess.getButtonElementAccess().getCssClassSTRINGTerminalRuleCall_2_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getButtonElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cssClass",
        		lv_cssClass_11_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getButtonElementAccess().getUnorderedGroup_2())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getButtonElementAccess().getUnorderedGroup_2());
	}

)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getButtonElementAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleBlockElement
entryRuleBlockElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockElementRule()); }
	 iv_ruleBlockElement=ruleBlockElement 
	 { $current=$iv_ruleBlockElement.current; } 
	 EOF 
;

// Rule BlockElement
ruleBlockElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='block' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBlockElementAccess().getBlockKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBlockElementAccess().getLeftParenthesisKeyword_1());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>(	otherlv_3='onClick' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockElementAccess().getOnClickKeyword_2_0_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBlockElementAccess().getEqualsSignKeyword_2_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockElementAccess().getOnClickExpressionParserRuleCall_2_0_2_0()); 
	    }
		lv_onClick_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockElementRule());
	        }
       		set(
       			$current, 
       			"onClick",
        		lv_onClick_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_6='class' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBlockElementAccess().getClassKeyword_2_1_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBlockElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		lv_cssClass_8_0=RULE_STRING
		{
			newLeafNode(lv_cssClass_8_0, grammarAccess.getBlockElementAccess().getCssClassSTRINGTerminalRuleCall_2_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cssClass",
        		lv_cssClass_8_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_9='bodyClass' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBlockElementAccess().getBodyClassKeyword_2_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBlockElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		lv_bodyCssClass_11_0=RULE_STRING
		{
			newLeafNode(lv_bodyCssClass_11_0, grammarAccess.getBlockElementAccess().getBodyCssClassSTRINGTerminalRuleCall_2_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bodyCssClass",
        		lv_bodyCssClass_11_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 3);
	 				}
					({true}?=>(	otherlv_12='style' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBlockElementAccess().getStyleKeyword_2_3_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBlockElementAccess().getEqualsSignKeyword_2_3_1());
    }
(
(
		lv_style_14_0=RULE_STRING
		{
			newLeafNode(lv_style_14_0, grammarAccess.getBlockElementAccess().getStyleSTRINGTerminalRuleCall_2_3_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"style",
        		lv_style_14_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 4);
	 				}
					({true}?=>(	otherlv_15='header' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBlockElementAccess().getHeaderKeyword_2_4_0());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBlockElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockElementAccess().getHeaderElementBodyParserRuleCall_2_4_2_0()); 
	    }
		lv_header_17_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockElementRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_17_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 5);
	 				}
					({true}?=>(	otherlv_18='headerClass' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getBlockElementAccess().getHeaderClassKeyword_2_5_0());
    }
	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getBlockElementAccess().getEqualsSignKeyword_2_5_1());
    }
(
(
		lv_headerCssClass_20_0=RULE_STRING
		{
			newLeafNode(lv_headerCssClass_20_0, grammarAccess.getBlockElementAccess().getHeaderCssClassSTRINGTerminalRuleCall_2_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"headerCssClass",
        		lv_headerCssClass_20_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBlockElementAccess().getUnorderedGroup_2(), 6);
	 				}
					({true}?=>(
(
		lv_noCss_21_0=	'noCss' 
    {
        newLeafNode(lv_noCss_21_0, grammarAccess.getBlockElementAccess().getNoCssNoCssKeyword_2_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBlockElementRule());
	        }
       		setWithLastConsumed($current, "noCss", true, "noCss");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getBlockElementAccess().getUnorderedGroup_2());
	}

)	otherlv_22=')' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getBlockElementAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockElementAccess().getBodyElementBodyParserRuleCall_4_0()); 
	    }
		lv_body_23_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockElementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_23_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleListElement
entryRuleListElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListElementRule()); }
	 iv_ruleListElement=ruleListElement 
	 { $current=$iv_ruleListElement.current; } 
	 EOF 
;

// Rule ListElement
ruleListElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='list' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getListElementAccess().getListKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListElementAccess().getLeftParenthesisKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListElementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListElementAccess().getIndexVariableListVariableParserRuleCall_3_0()); 
	    }
		lv_indexVariable_3_0=ruleListVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListElementRule());
	        }
       		set(
       			$current, 
       			"indexVariable",
        		lv_indexVariable_3_0, 
        		"ListVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getListElementAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListElementAccess().getValueVariableListVariableParserRuleCall_5_0()); 
	    }
		lv_valueVariable_5_0=ruleListVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListElementRule());
	        }
       		set(
       			$current, 
       			"valueVariable",
        		lv_valueVariable_5_0, 
        		"ListVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getListElementAccess().getRightParenthesisKeyword_6());
    }
	otherlv_7='in' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getListElementAccess().getInKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListElementAccess().getListExpressionExpressionParserRuleCall_8_0()); 
	    }
		lv_listExpression_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListElementRule());
	        }
       		set(
       			$current, 
       			"listExpression",
        		lv_listExpression_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getListElementAccess().getRightParenthesisKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListElementAccess().getBodyElementBodyParserRuleCall_10_0()); 
	    }
		lv_body_10_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListElementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_10_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleListVariable
entryRuleListVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListVariableRule()); }
	 iv_ruleListVariable=ruleListVariable 
	 { $current=$iv_ruleListVariable.current; } 
	 EOF 
;

// Rule ListVariable
ruleListVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getListVariableAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getListVariableRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleTableElement
entryRuleTableElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableElementRule()); }
	 iv_ruleTableElement=ruleTableElement 
	 { $current=$iv_ruleTableElement.current; } 
	 EOF 
;

// Rule TableElement
ruleTableElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTableElementAccess().getTableElementAction_0(),
            $current);
    }
)	otherlv_1='table' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableElementAccess().getTableKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTableElementAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTableElementAccess().getSubElementsTableBodyElementParserRuleCall_3_0()); 
	    }
		lv_subElements_3_0=ruleTableBodyElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableElementRule());
	        }
       		add(
       			$current, 
       			"subElements",
        		lv_subElements_3_0, 
        		"TableBodyElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableElementAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleTableBodyElement
entryRuleTableBodyElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableBodyElementRule()); }
	 iv_ruleTableBodyElement=ruleTableBodyElement 
	 { $current=$iv_ruleTableBodyElement.current; } 
	 EOF 
;

// Rule TableBodyElement
ruleTableBodyElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTableBodyElementAccess().getTableRowParserRuleCall_0()); 
    }
    this_TableRow_0=ruleTableRow
    { 
        $current = $this_TableRow_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTableBodyElementAccess().getTableRowsInvocationParserRuleCall_1()); 
    }
    this_TableRowsInvocation_1=ruleTableRowsInvocation
    { 
        $current = $this_TableRowsInvocation_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTableRowsInvocation
entryRuleTableRowsInvocation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableRowsInvocationRule()); }
	 iv_ruleTableRowsInvocation=ruleTableRowsInvocation 
	 { $current=$iv_ruleTableRowsInvocation.current; } 
	 EOF 
;

// Rule TableRowsInvocation
ruleTableRowsInvocation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='embed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableRowsInvocationAccess().getEmbedKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableRowsInvocationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTableRowsInvocationAccess().getDefinitionTableRowsDefinitionCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableRowsInvocationAccess().getArgumentListArgumentListParserRuleCall_2_0()); 
	    }
		lv_argumentList_2_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRowsInvocationRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_2_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTableRow
entryRuleTableRow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTableRowRule()); }
	 iv_ruleTableRow=ruleTableRow 
	 { $current=$iv_ruleTableRow.current; } 
	 EOF 
;

// Rule TableRow
ruleTableRow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTableRowAccess().getLabelExpressionParserRuleCall_0_0()); 
	    }
		lv_label_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRowRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableRowAccess().getBodyElementBodyParserRuleCall_1_0()); 
	    }
		lv_body_1_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableRowRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_1_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLabeledTableElement
entryRuleLabeledTableElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabeledTableElementRule()); }
	 iv_ruleLabeledTableElement=ruleLabeledTableElement 
	 { $current=$iv_ruleLabeledTableElement.current; } 
	 EOF 
;

// Rule LabeledTableElement
ruleLabeledTableElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLabeledTableElementAccess().getLabeledTableElementAction_0(),
            $current);
    }
)	otherlv_1='labeled-table' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLabeledTableElementAccess().getLabeledTableKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledTableElementAccess().getBodyElementBodyParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledTableElementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLabeledTableRow
entryRuleLabeledTableRow returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLabeledTableRowRule()); }
	 iv_ruleLabeledTableRow=ruleLabeledTableRow 
	 { $current=$iv_ruleLabeledTableRow.current; } 
	 EOF 
;

// Rule LabeledTableRow
ruleLabeledTableRow returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='label' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLabeledTableRowAccess().getLabelKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLabeledTableRowAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledTableRowAccess().getLabelExpressionParserRuleCall_2_0()); 
	    }
		lv_label_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledTableRowRule());
	        }
       		set(
       			$current, 
       			"label",
        		lv_label_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLabeledTableRowAccess().getBodyElementBodyParserRuleCall_3_0()); 
	    }
		lv_body_3_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLabeledTableRowRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProgressBarTabSet
entryRuleProgressBarTabSet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProgressBarTabSetRule()); }
	 iv_ruleProgressBarTabSet=ruleProgressBarTabSet 
	 { $current=$iv_ruleProgressBarTabSet.current; } 
	 EOF 
;

// Rule ProgressBarTabSet
ruleProgressBarTabSet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProgressBarTabSetAccess().getProgressBarTabSetAction_0(),
            $current);
    }
)	otherlv_1='progressBarTabSet' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProgressBarTabSetAccess().getProgressBarTabSetKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProgressBarTabSetAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProgressBarTabSetAccess().getTabsTabDeclarationParserRuleCall_3_0()); 
	    }
		lv_tabs_3_0=ruleTabDeclaration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProgressBarTabSetRule());
	        }
       		add(
       			$current, 
       			"tabs",
        		lv_tabs_3_0, 
        		"TabDeclaration");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProgressBarTabSetAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleTabDeclaration
entryRuleTabDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTabDeclarationRule()); }
	 iv_ruleTabDeclaration=ruleTabDeclaration 
	 { $current=$iv_ruleTabDeclaration.current; } 
	 EOF 
;

// Rule TabDeclaration
ruleTabDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTabDeclarationAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTabDeclarationAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTabDeclarationAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTabDeclarationAccess().getLeftCurlyBracketKeyword_0_0());
    }
(	otherlv_2='header' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTabDeclarationAccess().getHeaderKeyword_0_1_0());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTabDeclarationAccess().getEqualsSignKeyword_0_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTabDeclarationAccess().getHeaderElementBodyParserRuleCall_0_1_2_0()); 
	    }
		lv_header_4_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTabDeclarationRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_4_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
))))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTabDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTabDeclarationAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTabDeclarationAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(	otherlv_5='component' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTabDeclarationAccess().getComponentKeyword_1_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTabDeclarationAccess().getEqualsSignKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTabDeclarationRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getTabDeclarationAccess().getViewableViewableCrossReference_1_2_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTabDeclarationAccess().getArgumentListArgumentListParserRuleCall_1_3_0()); 
	    }
		lv_argumentList_8_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTabDeclarationRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_8_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTabDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTabDeclarationAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTabDeclarationAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>(	otherlv_9='previous' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTabDeclarationAccess().getPreviousKeyword_2_0());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTabDeclarationAccess().getEqualsSignKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTabDeclarationAccess().getPreviousCallbackCallbackExpressionParserRuleCall_2_2_0()); 
	    }
		lv_previousCallback_11_0=ruleCallbackExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTabDeclarationRule());
	        }
       		set(
       			$current, 
       			"previousCallback",
        		lv_previousCallback_11_0, 
        		"CallbackExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTabDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTabDeclarationAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTabDeclarationAccess().getUnorderedGroup(), 3);
	 				}
					({true}?=>((	otherlv_12='next' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTabDeclarationAccess().getNextKeyword_3_0_0());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTabDeclarationAccess().getEqualsSignKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTabDeclarationAccess().getNextCallbackCallbackExpressionParserRuleCall_3_0_2_0()); 
	    }
		lv_nextCallback_14_0=ruleCallbackExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTabDeclarationRule());
	        }
       		set(
       			$current, 
       			"nextCallback",
        		lv_nextCallback_14_0, 
        		"CallbackExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTabDeclarationAccess().getRightCurlyBracketKeyword_3_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTabDeclarationAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getTabDeclarationAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTabDeclarationAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleGroupElement
entryRuleGroupElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupElementRule()); }
	 iv_ruleGroupElement=ruleGroupElement 
	 { $current=$iv_ruleGroupElement.current; } 
	 EOF 
;

// Rule GroupElement
ruleGroupElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getGroupElementAccess().getGroupElementAction_0(),
            $current);
    }
)	otherlv_1='group' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGroupElementAccess().getGroupKeyword_1());
    }
(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGroupElementAccess().getLeftParenthesisKeyword_2_0());
    }
	otherlv_3='orientation' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGroupElementAccess().getOrientationKeyword_2_1());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGroupElementAccess().getEqualsSignKeyword_2_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupElementAccess().getOrientationGroupOrientationsEnumRuleCall_2_3_0()); 
	    }
		lv_orientation_5_0=ruleGroupOrientations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupElementRule());
	        }
       		set(
       			$current, 
       			"orientation",
        		lv_orientation_5_0, 
        		"GroupOrientations");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='v-align' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGroupElementAccess().getVAlignKeyword_2_4_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGroupElementAccess().getEqualsSignKeyword_2_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupElementAccess().getV_alignVerticalAlignmentEnumRuleCall_2_4_2_0()); 
	    }
		lv_v_align_8_0=ruleVerticalAlignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupElementRule());
	        }
       		set(
       			$current, 
       			"v_align",
        		lv_v_align_8_0, 
        		"VerticalAlignment");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGroupElementAccess().getRightParenthesisKeyword_2_5());
    }
)?	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGroupElementAccess().getLeftCurlyBracketKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getGroupElementAccess().getNestedGroupsGroupElementParserRuleCall_4_0_0()); 
	    }
		lv_nestedGroups_11_0=ruleGroupElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupElementRule());
	        }
       		add(
       			$current, 
       			"nestedGroups",
        		lv_nestedGroups_11_0, 
        		"GroupElement");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupElementAccess().getLeafGroupsElementBodyParserRuleCall_4_1_0()); 
	    }
		lv_leafGroups_12_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupElementRule());
	        }
       		add(
       			$current, 
       			"leafGroups",
        		lv_leafGroups_12_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
)+)	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getGroupElementAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCountdownTimer
entryRuleCountdownTimer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCountdownTimerRule()); }
	 iv_ruleCountdownTimer=ruleCountdownTimer 
	 { $current=$iv_ruleCountdownTimer.current; } 
	 EOF 
;

// Rule CountdownTimer
ruleCountdownTimer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='countdownTimer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCountdownTimerAccess().getCountdownTimerKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCountdownTimerAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_observed_2_0=	'observe' 
    {
        newLeafNode(lv_observed_2_0, grammarAccess.getCountdownTimerAccess().getObservedObserveKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCountdownTimerRule());
	        }
       		setWithLastConsumed($current, "observed", true, "observe");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCountdownTimerAccess().getEndTimeExpressionParserRuleCall_3_0()); 
	    }
		lv_endTime_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCountdownTimerRule());
	        }
       		set(
       			$current, 
       			"endTime",
        		lv_endTime_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='onEnd' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCountdownTimerAccess().getOnEndKeyword_4_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCountdownTimerAccess().getEqualsSignKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCountdownTimerAccess().getOnEndExpressionParserRuleCall_4_2_0()); 
	    }
		lv_onEnd_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCountdownTimerRule());
	        }
       		set(
       			$current, 
       			"onEnd",
        		lv_onEnd_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCountdownTimerAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleObserveElement
entryRuleObserveElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObserveElementRule()); }
	 iv_ruleObserveElement=ruleObserveElement 
	 { $current=$iv_ruleObserveElement.current; } 
	 EOF 
;

// Rule ObserveElement
ruleObserveElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='observe' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getObserveElementAccess().getObserveKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObserveElementAccess().getObserveExprExpressionParserRuleCall_1_0()); 
	    }
		lv_observeExpr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObserveElementRule());
	        }
       		set(
       			$current, 
       			"observeExpr",
        		lv_observeExpr_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getObserveElementAccess().getStatementBlockStatementBlockParserRuleCall_2_0()); 
	    }
		lv_statementBlock_2_0=ruleStatementBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObserveElementRule());
	        }
       		set(
       			$current, 
       			"statementBlock",
        		lv_statementBlock_2_0, 
        		"StatementBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCalendarElement
entryRuleCalendarElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCalendarElementRule()); }
	 iv_ruleCalendarElement=ruleCalendarElement 
	 { $current=$iv_ruleCalendarElement.current; } 
	 EOF 
;

// Rule CalendarElement
ruleCalendarElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='calendar' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCalendarElementAccess().getCalendarKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCalendarElementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalendarElementAccess().getDateExpressionParserRuleCall_2_0()); 
	    }
		lv_date_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalendarElementRule());
	        }
       		set(
       			$current, 
       			"date",
        		lv_date_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='onSelect' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCalendarElementAccess().getOnSelectKeyword_3_0_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCalendarElementAccess().getEqualsSignKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalendarElementAccess().getOnSelectExpressionParserRuleCall_3_0_2_0()); 
	    }
		lv_onSelect_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalendarElementRule());
	        }
       		set(
       			$current, 
       			"onSelect",
        		lv_onSelect_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_7='allowFrom' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCalendarElementAccess().getAllowFromKeyword_3_1_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCalendarElementAccess().getEqualsSignKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalendarElementAccess().getAllowFromExpressionParserRuleCall_3_1_2_0()); 
	    }
		lv_allowFrom_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalendarElementRule());
	        }
       		set(
       			$current, 
       			"allowFrom",
        		lv_allowFrom_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3(), 2);
	 				}
					({true}?=>(	otherlv_10='dateFormat' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCalendarElementAccess().getDateFormatKeyword_3_2_0());
    }
	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCalendarElementAccess().getEqualsSignKeyword_3_2_1());
    }
(
(
		lv_dateFormat_12_0=RULE_STRING
		{
			newLeafNode(lv_dateFormat_12_0, grammarAccess.getCalendarElementAccess().getDateFormatSTRINGTerminalRuleCall_3_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"dateFormat",
        		lv_dateFormat_12_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3(), 3);
	 				}
					({true}?=>(	otherlv_13='cssForDays' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCalendarElementAccess().getCssForDaysKeyword_3_3_0());
    }
	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCalendarElementAccess().getEqualsSignKeyword_3_3_1());
    }
	otherlv_15='(' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCalendarElementAccess().getLeftParenthesisKeyword_3_3_2());
    }
	otherlv_16='days' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getCalendarElementAccess().getDaysKeyword_3_3_3());
    }
	otherlv_17='=' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getCalendarElementAccess().getEqualsSignKeyword_3_3_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCalendarElementAccess().getDaysExpressionParserRuleCall_3_3_5_0()); 
	    }
		lv_days_18_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCalendarElementRule());
	        }
       		set(
       			$current, 
       			"days",
        		lv_days_18_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getCalendarElementAccess().getCommaKeyword_3_3_6());
    }
	otherlv_20='class' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getCalendarElementAccess().getClassKeyword_3_3_7());
    }
	otherlv_21='=' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getCalendarElementAccess().getEqualsSignKeyword_3_3_8());
    }
(
(
		lv_cssClass_22_0=RULE_STRING
		{
			newLeafNode(lv_cssClass_22_0, grammarAccess.getCalendarElementAccess().getCssClassSTRINGTerminalRuleCall_3_3_9_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCalendarElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"cssClass",
        		lv_cssClass_22_0, 
        		"STRING");
	    }

)
)	otherlv_23=')' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getCalendarElementAccess().getRightParenthesisKeyword_3_3_10());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getCalendarElementAccess().getUnorderedGroup_3());
	}

)	otherlv_24=')' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getCalendarElementAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleTimeSlotListElement
entryRuleTimeSlotListElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeSlotListElementRule()); }
	 iv_ruleTimeSlotListElement=ruleTimeSlotListElement 
	 { $current=$iv_ruleTimeSlotListElement.current; } 
	 EOF 
;

// Rule TimeSlotListElement
ruleTimeSlotListElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='timeSlotList' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTimeSlotListElementAccess().getTimeSlotListKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTimeSlotListElementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeSlotListElementAccess().getSlotsExpressionParserRuleCall_2_0()); 
	    }
		lv_slots_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeSlotListElementRule());
	        }
       		set(
       			$current, 
       			"slots",
        		lv_slots_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTimeSlotListElementAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimeSlotListElementAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTimeSlotListElementAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='onSelect' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTimeSlotListElementAccess().getOnSelectKeyword_3_0_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTimeSlotListElementAccess().getEqualsSignKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeSlotListElementAccess().getOnSelectExpressionParserRuleCall_3_0_2_0()); 
	    }
		lv_onSelect_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeSlotListElementRule());
	        }
       		set(
       			$current, 
       			"onSelect",
        		lv_onSelect_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeSlotListElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTimeSlotListElementAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTimeSlotListElementAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_7='onDelete' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTimeSlotListElementAccess().getOnDeleteKeyword_3_1_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTimeSlotListElementAccess().getEqualsSignKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeSlotListElementAccess().getOnDeleteExpressionParserRuleCall_3_1_2_0()); 
	    }
		lv_onDelete_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeSlotListElementRule());
	        }
       		set(
       			$current, 
       			"onDelete",
        		lv_onDelete_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTimeSlotListElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTimeSlotListElementAccess().getUnorderedGroup_3());
	}

)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTimeSlotListElementAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSlotAddElement
entryRuleSlotAddElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSlotAddElementRule()); }
	 iv_ruleSlotAddElement=ruleSlotAddElement 
	 { $current=$iv_ruleSlotAddElement.current; } 
	 EOF 
;

// Rule SlotAddElement
ruleSlotAddElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='slotAddList' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSlotAddElementAccess().getSlotAddListKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSlotAddElementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSlotAddElementAccess().getProductExpressionParserRuleCall_2_0()); 
	    }
		lv_product_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSlotAddElementRule());
	        }
       		set(
       			$current, 
       			"product",
        		lv_product_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSlotAddElementAccess().getDayExpressionParserRuleCall_3_0()); 
	    }
		lv_day_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSlotAddElementRule());
	        }
       		set(
       			$current, 
       			"day",
        		lv_day_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSlotAddElementAccess().getSlotsExpressionParserRuleCall_4_0()); 
	    }
		lv_slots_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSlotAddElementRule());
	        }
       		set(
       			$current, 
       			"slots",
        		lv_slots_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSlotAddElementAccess().getLeftCurlyBracketKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSlotAddElementAccess().getStartHourExpressionParserRuleCall_5_1_0()); 
	    }
		lv_startHour_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSlotAddElementRule());
	        }
       		set(
       			$current, 
       			"startHour",
        		lv_startHour_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='to' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSlotAddElementAccess().getToKeyword_5_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSlotAddElementAccess().getEndHourExpressionParserRuleCall_5_3_0()); 
	    }
		lv_endHour_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSlotAddElementRule());
	        }
       		set(
       			$current, 
       			"endHour",
        		lv_endHour_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSlotAddElementAccess().getRightCurlyBracketKeyword_5_4());
    }
)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSlotAddElementAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleWhenElement
entryRuleWhenElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhenElementRule()); }
	 iv_ruleWhenElement=ruleWhenElement 
	 { $current=$iv_ruleWhenElement.current; } 
	 EOF 
;

// Rule WhenElement
ruleWhenElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='when' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhenElementAccess().getWhenKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhenElementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenElementAccess().getConditionExpressionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenElementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhenElementAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhenElementAccess().getBodyElementBodyParserRuleCall_4_0()); 
	    }
		lv_body_4_0=ruleElementBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhenElementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_4_0, 
        		"ElementBody");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleImageElement
entryRuleImageElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImageElementRule()); }
	 iv_ruleImageElement=ruleImageElement 
	 { $current=$iv_ruleImageElement.current; } 
	 EOF 
;

// Rule ImageElement
ruleImageElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='image' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImageElementAccess().getImageKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getImageElementAccess().getLeftParenthesisKeyword_1());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getImageElementAccess().getUnorderedGroup_2());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getImageElementAccess().getUnorderedGroup_2(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getImageElementAccess().getUnorderedGroup_2(), 0);
	 				}
					({true}?=>((
(
		lv_observed_3_0=	'observe' 
    {
        newLeafNode(lv_observed_3_0, grammarAccess.getImageElementAccess().getObservedObserveKeyword_2_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImageElementRule());
	        }
       		setWithLastConsumed($current, "observed", true, "observe");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getImageElementAccess().getSourceUrlExpressionParserRuleCall_2_0_1_0()); 
	    }
		lv_sourceUrl_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageElementRule());
	        }
       		set(
       			$current, 
       			"sourceUrl",
        		lv_sourceUrl_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getImageElementAccess().getUnorderedGroup_2(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getImageElementAccess().getUnorderedGroup_2(), 1);
	 				}
					({true}?=>(	otherlv_5='width' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getImageElementAccess().getWidthKeyword_2_1_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getImageElementAccess().getEqualsSignKeyword_2_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageElementAccess().getWidthExpressionParserRuleCall_2_1_2_0()); 
	    }
		lv_width_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageElementRule());
	        }
       		set(
       			$current, 
       			"width",
        		lv_width_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getImageElementAccess().getUnorderedGroup_2(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getImageElementAccess().getUnorderedGroup_2(), 2);
	 				}
					({true}?=>(	otherlv_8='height' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getImageElementAccess().getHeightKeyword_2_2_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getImageElementAccess().getEqualsSignKeyword_2_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getImageElementAccess().getHeightExpressionParserRuleCall_2_2_2_0()); 
	    }
		lv_height_10_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImageElementRule());
	        }
       		set(
       			$current, 
       			"height",
        		lv_height_10_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getImageElementAccess().getUnorderedGroup_2());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getImageElementAccess().getUnorderedGroup_2())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getImageElementAccess().getUnorderedGroup_2());
	}

)	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getImageElementAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleFrameElement
entryRuleFrameElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFrameElementRule()); }
	 iv_ruleFrameElement=ruleFrameElement 
	 { $current=$iv_ruleFrameElement.current; } 
	 EOF 
;

// Rule FrameElement
ruleFrameElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='iframe' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFrameElementAccess().getIframeKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFrameElementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFrameElementAccess().getSourceUrlExpressionParserRuleCall_2_0()); 
	    }
		lv_sourceUrl_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFrameElementRule());
	        }
       		set(
       			$current, 
       			"sourceUrl",
        		lv_sourceUrl_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getFrameElementAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFrameElementAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameElementAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='width' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFrameElementAccess().getWidthKeyword_3_0_0());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFrameElementAccess().getEqualsSignKeyword_3_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFrameElementAccess().getWidthExpressionParserRuleCall_3_0_2_0()); 
	    }
		lv_width_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFrameElementRule());
	        }
       		set(
       			$current, 
       			"width",
        		lv_width_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getFrameElementAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getFrameElementAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_7='height' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFrameElementAccess().getHeightKeyword_3_1_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFrameElementAccess().getEqualsSignKeyword_3_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFrameElementAccess().getHeightExpressionParserRuleCall_3_1_2_0()); 
	    }
		lv_height_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFrameElementRule());
	        }
       		set(
       			$current, 
       			"height",
        		lv_height_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getFrameElementAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getFrameElementAccess().getUnorderedGroup_3());
	}

)	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFrameElementAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLineBreakElement
entryRuleLineBreakElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLineBreakElementRule()); }
	 iv_ruleLineBreakElement=ruleLineBreakElement 
	 { $current=$iv_ruleLineBreakElement.current; } 
	 EOF 
;

// Rule LineBreakElement
ruleLineBreakElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLineBreakElementAccess().getLineBreakElementAction_0(),
            $current);
    }
)	otherlv_1='line-break' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLineBreakElementAccess().getLineBreakKeyword_1());
    }
)
;





// Entry rule entryRuleStatementBlock
entryRuleStatementBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementBlockRule()); }
	 iv_ruleStatementBlock=ruleStatementBlock 
	 { $current=$iv_ruleStatementBlock.current; } 
	 EOF 
;

// Rule StatementBlock
ruleStatementBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStatementBlockAccess().getStatementBlockAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStatementBlockAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStatementBlockAccess().getStatementsStatementParserRuleCall_2_0()); 
	    }
		lv_statements_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStatementBlockRule());
	        }
       		add(
       			$current, 
       			"statements",
        		lv_statements_2_0, 
        		"Statement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStatementBlockAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getNonExitingStatementParserRuleCall_0()); 
    }
    this_NonExitingStatement_0=ruleNonExitingStatement
    { 
        $current = $this_NonExitingStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getExitingStatementParserRuleCall_1()); 
    }
    this_ExitingStatement_1=ruleExitingStatement
    { 
        $current = $this_ExitingStatement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExitingStatement
entryRuleExitingStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExitingStatementRule()); }
	 iv_ruleExitingStatement=ruleExitingStatement 
	 { $current=$iv_ruleExitingStatement.current; } 
	 EOF 
;

// Rule ExitingStatement
ruleExitingStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExitingStatementAccess().getGotoScreenStatementParserRuleCall_0()); 
    }
    this_GotoScreenStatement_0=ruleGotoScreenStatement
    { 
        $current = $this_GotoScreenStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExitingStatementAccess().getGotoModuleStatementParserRuleCall_1()); 
    }
    this_GotoModuleStatement_1=ruleGotoModuleStatement
    { 
        $current = $this_GotoModuleStatement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNonExitingStatement
entryRuleNonExitingStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonExitingStatementRule()); }
	 iv_ruleNonExitingStatement=ruleNonExitingStatement 
	 { $current=$iv_ruleNonExitingStatement.current; } 
	 EOF 
;

// Rule NonExitingStatement
ruleNonExitingStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNonExitingStatementAccess().getAssignmentOrExpressionStatementParserRuleCall_0()); 
    }
    this_AssignmentOrExpressionStatement_0=ruleAssignmentOrExpressionStatement
    { 
        $current = $this_AssignmentOrExpressionStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNonExitingStatementAccess().getShowModalStatementParserRuleCall_1()); 
    }
    this_ShowModalStatement_1=ruleShowModalStatement
    { 
        $current = $this_ShowModalStatement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNonExitingStatementAccess().getExitModalStatementParserRuleCall_2()); 
    }
    this_ExitModalStatement_2=ruleExitModalStatement
    { 
        $current = $this_ExitModalStatement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNonExitingStatementAccess().getIfStatementParserRuleCall_3()); 
    }
    this_IfStatement_3=ruleIfStatement
    { 
        $current = $this_IfStatement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |((	'val' 
)=>
    { 
        newCompositeNode(grammarAccess.getNonExitingStatementAccess().getLocalValueDeclarationStatementParserRuleCall_4()); 
    }
    this_LocalValueDeclarationStatement_4=ruleLocalValueDeclarationStatement
    { 
        $current = $this_LocalValueDeclarationStatement_4.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getNonExitingStatementAccess().getListRemoveStatementParserRuleCall_5()); 
    }
    this_ListRemoveStatement_5=ruleListRemoveStatement
    { 
        $current = $this_ListRemoveStatement_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNonExitingStatementAccess().getForStatementParserRuleCall_6()); 
    }
    this_ForStatement_6=ruleForStatement
    { 
        $current = $this_ForStatement_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	 iv_ruleForStatement=ruleForStatement 
	 { $current=$iv_ruleForStatement.current; } 
	 EOF 
;

// Rule ForStatement
ruleForStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='for' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getIndexVariableListVariableParserRuleCall_3_0()); 
	    }
		lv_indexVariable_3_0=ruleListVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		set(
       			$current, 
       			"indexVariable",
        		lv_indexVariable_3_0, 
        		"ListVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getForStatementAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getValueVariableListVariableParserRuleCall_5_0()); 
	    }
		lv_valueVariable_5_0=ruleListVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		set(
       			$current, 
       			"valueVariable",
        		lv_valueVariable_5_0, 
        		"ListVariable");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_6());
    }
	otherlv_7='in' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getForStatementAccess().getInKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getListExpressionExpressionParserRuleCall_8_0()); 
	    }
		lv_listExpression_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		set(
       			$current, 
       			"listExpression",
        		lv_listExpression_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getThenBlockStatementBlockParserRuleCall_10_0()); 
	    }
		lv_thenBlock_10_0=ruleStatementBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		set(
       			$current, 
       			"thenBlock",
        		lv_thenBlock_10_0, 
        		"StatementBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleListRemoveStatement
entryRuleListRemoveStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListRemoveStatementRule()); }
	 iv_ruleListRemoveStatement=ruleListRemoveStatement 
	 { $current=$iv_ruleListRemoveStatement.current; } 
	 EOF 
;

// Rule ListRemoveStatement
ruleListRemoveStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='remove' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getListRemoveStatementAccess().getRemoveKeyword_0());
    }
	otherlv_1='from' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListRemoveStatementAccess().getFromKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListRemoveStatementAccess().getListExprExpressionParserRuleCall_2_0()); 
	    }
		lv_listExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRemoveStatementRule());
	        }
       		set(
       			$current, 
       			"listExpr",
        		lv_listExpr_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_3='where' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListRemoveStatementAccess().getWhereKeyword_3_0_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getListRemoveStatementRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getListRemoveStatementAccess().getFeatureFeatureCrossReference_3_0_1_0()); 
	}

)
)	otherlv_5='==' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getListRemoveStatementAccess().getEqualsSignEqualsSignKeyword_3_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListRemoveStatementAccess().getValueExprExpressionParserRuleCall_3_0_3_0()); 
	    }
		lv_valueExpr_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRemoveStatementRule());
	        }
       		set(
       			$current, 
       			"valueExpr",
        		lv_valueExpr_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_7='at' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getListRemoveStatementAccess().getAtKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListRemoveStatementAccess().getIndexVariableExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_indexVariable_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListRemoveStatementRule());
	        }
       		set(
       			$current, 
       			"indexVariable",
        		lv_indexVariable_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleAssignmentOrExpressionStatement
entryRuleAssignmentOrExpressionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentOrExpressionStatementRule()); }
	 iv_ruleAssignmentOrExpressionStatement=ruleAssignmentOrExpressionStatement 
	 { $current=$iv_ruleAssignmentOrExpressionStatement.current; } 
	 EOF 
;

// Rule AssignmentOrExpressionStatement
ruleAssignmentOrExpressionStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentOrExpressionStatementAccess().getLhsExpressionParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentOrExpressionStatementRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentOrExpressionStatementAccess().getOperatorAssignmentOperatorEnumRuleCall_1_0_0()); 
	    }
		lv_operator_1_0=ruleAssignmentOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentOrExpressionStatementRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"AssignmentOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentOrExpressionStatementAccess().getRhsExpressionParserRuleCall_1_1_0()); 
	    }
		lv_rhs_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentOrExpressionStatementRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleShowModalStatement
entryRuleShowModalStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShowModalStatementRule()); }
	 iv_ruleShowModalStatement=ruleShowModalStatement 
	 { $current=$iv_ruleShowModalStatement.current; } 
	 EOF 
;

// Rule ShowModalStatement
ruleShowModalStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='show-modal' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getShowModalStatementAccess().getShowModalKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getShowModalStatementRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getShowModalStatementAccess().getViewableViewableCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getShowModalStatementAccess().getArgumentListArgumentListParserRuleCall_2_0()); 
	    }
		lv_argumentList_2_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShowModalStatementRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_2_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_persistent_3_0=	'persistent' 
    {
        newLeafNode(lv_persistent_3_0, grammarAccess.getShowModalStatementAccess().getPersistentPersistentKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShowModalStatementRule());
	        }
       		setWithLastConsumed($current, "persistent", true, "persistent");
	    }

)
)?)
;





// Entry rule entryRuleExitModalStatement
entryRuleExitModalStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExitModalStatementRule()); }
	 iv_ruleExitModalStatement=ruleExitModalStatement 
	 { $current=$iv_ruleExitModalStatement.current; } 
	 EOF 
;

// Rule ExitModalStatement
ruleExitModalStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExitModalStatementAccess().getExitModalStatementAction_0(),
            $current);
    }
)	otherlv_1='exit-modal' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExitModalStatementAccess().getExitModalKeyword_1());
    }
)
;





// Entry rule entryRuleGotoScreenStatement
entryRuleGotoScreenStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGotoScreenStatementRule()); }
	 iv_ruleGotoScreenStatement=ruleGotoScreenStatement 
	 { $current=$iv_ruleGotoScreenStatement.current; } 
	 EOF 
;

// Rule GotoScreenStatement
ruleGotoScreenStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='goto' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGotoScreenStatementAccess().getGotoKeyword_0_0());
    }

    |	otherlv_1='goto-screen' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGotoScreenStatementAccess().getGotoScreenKeyword_0_1());
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGotoScreenStatementRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getGotoScreenStatementAccess().getViewableViewableCrossReference_1_0()); 
	}

)
)((
(
ruleArgumentList
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getGotoScreenStatementAccess().getArgumentListArgumentListParserRuleCall_2_0()); 
	    }
		lv_argumentList_3_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoScreenStatementRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_3_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleGotoModuleStatement
entryRuleGotoModuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGotoModuleStatementRule()); }
	 iv_ruleGotoModuleStatement=ruleGotoModuleStatement 
	 { $current=$iv_ruleGotoModuleStatement.current; } 
	 EOF 
;

// Rule GotoModuleStatement
ruleGotoModuleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='goto-module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGotoModuleStatementAccess().getGotoModuleKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGotoModuleStatementRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getGotoModuleStatementAccess().getTargetModuleUiModuleCrossReference_1_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGotoModuleStatementAccess().getArgsArgumentListParserRuleCall_2_0()); 
	    }
		lv_args_2_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoModuleStatementRule());
	        }
       		set(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_authenticate_3_0=	'after-authentication-by' 
    {
        newLeafNode(lv_authenticate_3_0, grammarAccess.getGotoModuleStatementAccess().getAuthenticateAfterAuthenticationByKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGotoModuleStatementRule());
	        }
       		setWithLastConsumed($current, "authenticate", true, "after-authentication-by");
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getGotoModuleStatementRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getGotoModuleStatementAccess().getAuthOptionAuthenticationDeclarationCrossReference_3_1_0()); 
	}

)
)	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getGotoModuleStatementAccess().getLeftParenthesisKeyword_3_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGotoModuleStatementAccess().getPrincipalPrincipalArgumentParserRuleCall_3_3_0()); 
	    }
		lv_principal_6_0=rulePrincipalArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoModuleStatementRule());
	        }
       		set(
       			$current, 
       			"principal",
        		lv_principal_6_0, 
        		"PrincipalArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGotoModuleStatementAccess().getCommaKeyword_3_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGotoModuleStatementAccess().getCredentialCredentialArgumentParserRuleCall_3_5_0()); 
	    }
		lv_credential_8_0=ruleCredentialArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoModuleStatementRule());
	        }
       		set(
       			$current, 
       			"credential",
        		lv_credential_8_0, 
        		"CredentialArgument");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGotoModuleStatementAccess().getRightParenthesisKeyword_3_6());
    }
	otherlv_10='@error:' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getGotoModuleStatementAccess().getErrorKeyword_3_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGotoModuleStatementAccess().getErrorCallbackCallbackExpressionParserRuleCall_3_8_0()); 
	    }
		lv_errorCallback_11_0=ruleCallbackExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGotoModuleStatementRule());
	        }
       		set(
       			$current, 
       			"errorCallback",
        		lv_errorCallback_11_0, 
        		"CallbackExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePrincipalArgument
entryRulePrincipalArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrincipalArgumentRule()); }
	 iv_rulePrincipalArgument=rulePrincipalArgument 
	 { $current=$iv_rulePrincipalArgument.current; } 
	 EOF 
;

// Rule PrincipalArgument
rulePrincipalArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrincipalArgumentRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPrincipalArgumentAccess().getPrincipalAuthenticationParameterCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPrincipalArgumentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrincipalArgumentAccess().getValueExprExpressionParserRuleCall_2_0()); 
	    }
		lv_valueExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrincipalArgumentRule());
	        }
       		set(
       			$current, 
       			"valueExpr",
        		lv_valueExpr_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCredentialArgument
entryRuleCredentialArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCredentialArgumentRule()); }
	 iv_ruleCredentialArgument=ruleCredentialArgument 
	 { $current=$iv_ruleCredentialArgument.current; } 
	 EOF 
;

// Rule CredentialArgument
ruleCredentialArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCredentialArgumentRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getCredentialArgumentAccess().getCredentialAuthenticationParameterCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCredentialArgumentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCredentialArgumentAccess().getValueExprExpressionParserRuleCall_2_0()); 
	    }
		lv_valueExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCredentialArgumentRule());
	        }
       		set(
       			$current, 
       			"valueExpr",
        		lv_valueExpr_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	 iv_ruleIfStatement=ruleIfStatement 
	 { $current=$iv_ruleIfStatement.current; } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getThenBlockStatementBlockParserRuleCall_4_0()); 
	    }
		lv_thenBlock_4_0=ruleStatementBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"thenBlock",
        		lv_thenBlock_4_0, 
        		"StatementBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getElseBlockStatementBlockParserRuleCall_5_1_0()); 
	    }
		lv_elseBlock_6_0=ruleStatementBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"elseBlock",
        		lv_elseBlock_6_0, 
        		"StatementBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleLocalValueDeclarationStatement
entryRuleLocalValueDeclarationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalValueDeclarationStatementRule()); }
	 iv_ruleLocalValueDeclarationStatement=ruleLocalValueDeclarationStatement 
	 { $current=$iv_ruleLocalValueDeclarationStatement.current; } 
	 EOF 
;

// Rule LocalValueDeclarationStatement
ruleLocalValueDeclarationStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	'val' 
)=>	otherlv_0='val' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLocalValueDeclarationStatementAccess().getValKeyword_0());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalValueDeclarationStatementAccess().getValueValueParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalValueDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLocalValueDeclarationStatementAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalValueDeclarationStatementAccess().getDeclaredTypeTypeLiteralParserRuleCall_2_1_0()); 
	    }
		lv_declaredType_3_0=ruleTypeLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalValueDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"declaredType",
        		lv_declaredType_3_0, 
        		"TypeLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLocalValueDeclarationStatementAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalValueDeclarationStatementAccess().getValueExprExpressionParserRuleCall_4_0()); 
	    }
		lv_valueExpr_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalValueDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"valueExpr",
        		lv_valueExpr_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getTernaryExpressionParserRuleCall()); 
    }
    this_TernaryExpression_0=ruleTernaryExpression
    { 
        $current = $this_TernaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleTernaryExpression
entryRuleTernaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTernaryExpressionRule()); }
	 iv_ruleTernaryExpression=ruleTernaryExpression 
	 { $current=$iv_ruleTernaryExpression.current; } 
	 EOF 
;

// Rule TernaryExpression
ruleTernaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTernaryExpressionAccess().getOrExpressionParserRuleCall_0()); 
    }
    this_OrExpression_0=ruleOrExpression
    { 
        $current = $this_OrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTernaryExpressionAccess().getTernaryExpressionGuardAction_1_0(),
            $current);
    }
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTernaryExpressionAccess().getQuestionMarkKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTernaryExpressionAccess().getThenExprOrExpressionParserRuleCall_1_2_0()); 
	    }
		lv_thenExpr_3_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTernaryExpressionRule());
	        }
       		set(
       			$current, 
       			"thenExpr",
        		lv_thenExpr_3_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTernaryExpressionAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTernaryExpressionAccess().getElseExprOrExpressionParserRuleCall_1_4_0()); 
	    }
		lv_elseExpr_5_0=ruleOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTernaryExpressionRule());
	        }
       		set(
       			$current, 
       			"elseExpr",
        		lv_elseExpr_5_0, 
        		"OrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	 iv_ruleOrExpression=ruleOrExpression 
	 { $current=$iv_ruleOrExpression.current; } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
    }
    this_AndExpression_0=ruleAndExpression
    { 
        $current = $this_AndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOrExpressionAccess().getOrExpressionLeftOperandAction_1_0(),
            $current);
    }
)	otherlv_2='||' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrExpressionAccess().getRightOperandAndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightOperand_3_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	 iv_ruleAndExpression=ruleAndExpression 
	 { $current=$iv_ruleAndExpression.current; } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAndExpressionAccess().getComparisonExpressionParserRuleCall_0()); 
    }
    this_ComparisonExpression_0=ruleComparisonExpression
    { 
        $current = $this_ComparisonExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndExpressionAccess().getAndExpressionLeftOperandAction_1_0(),
            $current);
    }
)	otherlv_2='&&' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAndExpressionAccess().getAmpersandAmpersandKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getRightOperandComparisonExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightOperand_3_0=ruleComparisonExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"ComparisonExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleComparisonExpression
entryRuleComparisonExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComparisonExpressionRule()); }
	 iv_ruleComparisonExpression=ruleComparisonExpression 
	 { $current=$iv_ruleComparisonExpression.current; } 
	 EOF 
;

// Rule ComparisonExpression
ruleComparisonExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getComparisonExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
    }
    this_AdditiveExpression_0=ruleAdditiveExpression
    { 
        $current = $this_AdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getComparisonExpressionAccess().getComparisonExpressionLeftOperandAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComparisonExpressionAccess().getComparatorComparatorEnumRuleCall_1_1_0()); 
	    }
		lv_comparator_2_0=ruleComparator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
	        }
       		set(
       			$current, 
       			"comparator",
        		lv_comparator_2_0, 
        		"Comparator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComparisonExpressionAccess().getRightOperandAdditiveExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightOperand_3_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComparisonExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	 iv_ruleAdditiveExpression=ruleAdditiveExpression 
	 { $current=$iv_ruleAdditiveExpression.current; } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_MultiplicativeExpression_0=ruleMultiplicativeExpression
    { 
        $current = $this_MultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftOperandAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorsEnumRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleAdditiveOperators		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"AdditiveOperators");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightOperandMultiplicativeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightOperand_3_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	 iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression 
	 { $current=$iv_ruleMultiplicativeExpression.current; } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getNotExpressionParserRuleCall_0()); 
    }
    this_NotExpression_0=ruleNotExpression
    { 
        $current = $this_NotExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftOperandAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorsEnumRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleMultiplicativeOperators		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"MultiplicativeOperators");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandNotExpressionParserRuleCall_1_2_0()); 
	    }
		lv_rightOperand_3_0=ruleNotExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"NotExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleNotExpression
entryRuleNotExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotExpressionRule()); }
	 iv_ruleNotExpression=ruleNotExpression 
	 { $current=$iv_ruleNotExpression.current; } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNotExpressionAccess().getInterfaceCallExpressionParserRuleCall_0()); 
    }
    this_InterfaceCallExpression_0=ruleInterfaceCallExpression
    { 
        $current = $this_InterfaceCallExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNotExpressionAccess().getNotExpressionAction_1_0(),
            $current);
    }
)	otherlv_2='!' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNotExpressionAccess().getExclamationMarkKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotExpressionAccess().getOperandNotExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand_3_0=ruleNotExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_3_0, 
        		"NotExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleInterfaceCallExpression
entryRuleInterfaceCallExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceCallExpressionRule()); }
	 iv_ruleInterfaceCallExpression=ruleInterfaceCallExpression 
	 { $current=$iv_ruleInterfaceCallExpression.current; } 
	 EOF 
;

// Rule InterfaceCallExpression
ruleInterfaceCallExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInterfaceCallExpressionAccess().getFeatureAccessExpressionParserRuleCall_0()); 
    }
    this_FeatureAccessExpression_0=ruleFeatureAccessExpression
    { 
        $current = $this_FeatureAccessExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfaceCallExpressionAccess().getInterfaceCallExpressionAction_1_0(),
            $current);
    }
)	otherlv_2='call' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterfaceCallExpressionAccess().getCallKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceCallExpressionAccess().getServiceIdServiceIdentificationParserRuleCall_1_2_0()); 
	    }
		lv_serviceId_3_0=ruleServiceIdentification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceCallExpressionRule());
	        }
       		set(
       			$current, 
       			"serviceId",
        		lv_serviceId_3_0, 
        		"ServiceIdentification");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterfaceCallExpressionAccess().getLeftParenthesisKeyword_1_3());
    }
(	otherlv_5='observe' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInterfaceCallExpressionAccess().getObserveKeyword_1_4_0());
    }
	otherlv_6='[' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInterfaceCallExpressionAccess().getLeftSquareBracketKeyword_1_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceCallExpressionAccess().getObserveSitesExpressionParserRuleCall_1_4_2_0()); 
	    }
		lv_observeSites_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceCallExpressionRule());
	        }
       		add(
       			$current, 
       			"observeSites",
        		lv_observeSites_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8=']' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInterfaceCallExpressionAccess().getRightSquareBracketKeyword_1_4_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceCallExpressionAccess().getInputExpressionParserRuleCall_1_5_0()); 
	    }
		lv_input_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceCallExpressionRule());
	        }
       		set(
       			$current, 
       			"input",
        		lv_input_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_10=')' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInterfaceCallExpressionAccess().getRightParenthesisKeyword_1_6());
    }
(	otherlv_11='=>' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInterfaceCallExpressionAccess().getEqualsSignGreaterThanSignKeyword_1_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceCallExpressionAccess().getCallbackCallbackExpressionParserRuleCall_1_7_1_0()); 
	    }
		lv_callback_12_0=ruleCallbackExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceCallExpressionRule());
	        }
       		set(
       			$current, 
       			"callback",
        		lv_callback_12_0, 
        		"CallbackExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13='@error:' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getInterfaceCallExpressionAccess().getErrorKeyword_1_7_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceCallExpressionAccess().getErrorCallbackCallbackExpressionParserRuleCall_1_7_2_1_0()); 
	    }
		lv_errorCallback_14_0=ruleCallbackExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceCallExpressionRule());
	        }
       		set(
       			$current, 
       			"errorCallback",
        		lv_errorCallback_14_0, 
        		"CallbackExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)?))
;





// Entry rule entryRuleServiceIdentification
entryRuleServiceIdentification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceIdentificationRule()); }
	 iv_ruleServiceIdentification=ruleServiceIdentification 
	 { $current=$iv_ruleServiceIdentification.current; } 
	 EOF 
;

// Rule ServiceIdentification
ruleServiceIdentification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getServiceIdentificationAccess().getNamedServiceReferenceAction_0_0(),
            $current);
    }
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceIdentificationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getServiceIdentificationAccess().getServiceNamedServiceCrossReference_0_1_0()); 
	}

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getServiceIdentificationAccess().getCrudServiceIdentificationAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getServiceIdentificationAccess().getCrudTypeCrudTypesEnumRuleCall_1_1_0()); 
	    }
		lv_crudType_3_0=ruleCrudTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getServiceIdentificationRule());
	        }
       		set(
       			$current, 
       			"crudType",
        		lv_crudType_3_0, 
        		"CrudTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceIdentificationRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getServiceIdentificationAccess().getStructureStructureCrossReference_1_2_0()); 
	}

)
)))
;





// Entry rule entryRuleFeatureAccessExpression
entryRuleFeatureAccessExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getFeatureAccessExpressionRule()); }
	 iv_ruleFeatureAccessExpression=ruleFeatureAccessExpression 
	 { $current=$iv_ruleFeatureAccessExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FeatureAccessExpression
ruleFeatureAccessExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFeatureAccessExpressionAccess().getPrimaryExpressionParserRuleCall_0()); 
    }
    this_PrimaryExpression_0=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFeatureAccessExpressionAccess().getFeatureAccessExpressionPreviousAction_1_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeatureAccessExpressionAccess().getFullStopKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureAccessExpressionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getFeatureAccessExpressionAccess().getFeatureFeatureCrossReference_1_2_0()); 
	}

)
))*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
	}
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getExpressionParserRuleCall_0_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
    }
)
    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLiteralExpressionParserRuleCall_1()); 
    }
    this_LiteralExpression_3=ruleLiteralExpression
    { 
        $current = $this_LiteralExpression_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getCallbackExpressionsParserRuleCall_2()); 
    }
    this_CallbackExpressions_4=ruleCallbackExpressions
    { 
        $current = $this_CallbackExpressions_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getStructureCreationExpressionParserRuleCall_3()); 
    }
    this_StructureCreationExpression_5=ruleStructureCreationExpression
    { 
        $current = $this_StructureCreationExpression_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueReferenceOrMethodCallExpressionParserRuleCall_4()); 
    }
    this_ValueReferenceOrMethodCallExpression_6=ruleValueReferenceOrMethodCallExpression
    { 
        $current = $this_ValueReferenceOrMethodCallExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getDateExpressionParserRuleCall_5()); 
    }
    this_DateExpression_7=ruleDateExpression
    { 
        $current = $this_DateExpression_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBuiltinFunctionExpressionParserRuleCall_6()); 
    }
    this_BuiltinFunctionExpression_8=ruleBuiltinFunctionExpression
    { 
        $current = $this_BuiltinFunctionExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPrimaryExpressionAccess().getSelectionExpressionAction_7_0(),
            $current);
    }
)	otherlv_10='selection' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getSelectionKeyword_7_1());
    }
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDateExpression
entryRuleDateExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDateExpressionRule()); }
	 iv_ruleDateExpression=ruleDateExpression 
	 { $current=$iv_ruleDateExpression.current; } 
	 EOF 
;

// Rule DateExpression
ruleDateExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDateExpressionAccess().getDateNowExpressionAction_0_0(),
            $current);
    }
)	otherlv_1='now' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDateExpressionAccess().getNowKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDateExpressionAccess().getDateTodayExpressionAction_1_0(),
            $current);
    }
)	otherlv_3='today' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDateExpressionAccess().getTodayKeyword_1_1());
    }
))
;





// Entry rule entryRuleBuiltinFunctionExpression
entryRuleBuiltinFunctionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBuiltinFunctionExpressionRule()); }
	 iv_ruleBuiltinFunctionExpression=ruleBuiltinFunctionExpression 
	 { $current=$iv_ruleBuiltinFunctionExpression.current; } 
	 EOF 
;

// Rule BuiltinFunctionExpression
ruleBuiltinFunctionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBuiltinFunctionExpressionAccess().getFunctionBuiltinFunctionsEnumRuleCall_0_0()); 
	    }
		lv_function_0_0=ruleBuiltinFunctions		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuiltinFunctionExpressionRule());
	        }
       		set(
       			$current, 
       			"function",
        		lv_function_0_0, 
        		"BuiltinFunctions");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBuiltinFunctionExpressionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuiltinFunctionExpressionAccess().getArgumentExpressionParserRuleCall_2_0()); 
	    }
		lv_argument_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuiltinFunctionExpressionRule());
	        }
       		set(
       			$current, 
       			"argument",
        		lv_argument_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='on' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBuiltinFunctionExpressionAccess().getOnKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBuiltinFunctionExpressionRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getBuiltinFunctionExpressionAccess().getSortFeatureFeatureCrossReference_3_1_0()); 
	}

)
))?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBuiltinFunctionExpressionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralExpressionRule()); }
	 iv_ruleLiteralExpression=ruleLiteralExpression 
	 { $current=$iv_ruleLiteralExpression.current; } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionAction_0_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getLiteralExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getLiteralBooleanLiteralsEnumRuleCall_1_1_0()); 
	    }
		lv_literal_3_0=ruleBooleanLiterals		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralExpressionRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_3_0, 
        		"BooleanLiterals");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralExpressionAccess().getIntegerLiteralExpressionAction_2_0(),
            $current);
    }
)(
(
		lv_value_5_0=RULE_INT
		{
			newLeafNode(lv_value_5_0, grammarAccess.getLiteralExpressionAccess().getValueINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"INT");
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getLiteralExpressionAccess().getNumberLiteralExpressionAction_3_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getValueNumberLiteralParserRuleCall_3_1_0()); 
	    }
		lv_value_7_0=ruleNumberLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"NumberLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
    { 
        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getListLiteralExpressionParserRuleCall_4()); 
    }
    this_ListLiteralExpression_8=ruleListLiteralExpression
    { 
        $current = $this_ListLiteralExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getEnumerationLiteralExpressionParserRuleCall_5()); 
    }
    this_EnumerationLiteralExpression_9=ruleEnumerationLiteralExpression
    { 
        $current = $this_EnumerationLiteralExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getDecisionExpressionParserRuleCall_6()); 
    }
    this_DecisionExpression_10=ruleDecisionExpression
    { 
        $current = $this_DecisionExpression_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleListLiteralExpression
entryRuleListLiteralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListLiteralExpressionRule()); }
	 iv_ruleListLiteralExpression=ruleListLiteralExpression 
	 { $current=$iv_ruleListLiteralExpression.current; } 
	 EOF 
;

// Rule ListLiteralExpression
ruleListLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getListLiteralExpressionAccess().getListLiteralExpressionAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getListLiteralExpressionAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListLiteralExpressionAccess().getMembersExpressionParserRuleCall_2_0()); 
	    }
		lv_members_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListLiteralExpressionRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getListLiteralExpressionAccess().getRightSquareBracketKeyword_3());
    }
)
;





// Entry rule entryRuleEnumerationLiteralExpression
entryRuleEnumerationLiteralExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getEnumerationLiteralExpressionRule()); }
	 iv_ruleEnumerationLiteralExpression=ruleEnumerationLiteralExpression 
	 { $current=$iv_ruleEnumerationLiteralExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EnumerationLiteralExpression
ruleEnumerationLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationLiteralExpressionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getEnumerationLiteralExpressionAccess().getEnumerationEnumerationCrossReference_0_0()); 
	}

)
)	otherlv_1='::' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumerationLiteralExpressionAccess().getColonColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationLiteralExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEnumerationLiteralExpressionAccess().getLiteralEnumerationLiteralCrossReference_2_0()); 
	    }
		ruleEnumerationName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); } 
	 iv_ruleNumberLiteral=ruleNumberLiteral 
	 { $current=$iv_ruleNumberLiteral.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NumberLiteral
ruleNumberLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getNumberLiteralAccess().getINTTerminalRuleCall_0()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumberLiteralAccess().getFullStopKeyword_1()); 
    }
    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getNumberLiteralAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDecisionExpression
entryRuleDecisionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecisionExpressionRule()); }
	 iv_ruleDecisionExpression=ruleDecisionExpression 
	 { $current=$iv_ruleDecisionExpression.current; } 
	 EOF 
;

// Rule DecisionExpression
ruleDecisionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDecisionExpressionAccess().getDecisionExpressionAction_0(),
            $current);
    }
)	otherlv_1='decide' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDecisionExpressionAccess().getDecideKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDecisionExpressionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDecisionExpressionAccess().getCasesDecisionCaseParserRuleCall_3_0()); 
	    }
		lv_cases_3_0=ruleDecisionCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecisionExpressionRule());
	        }
       		add(
       			$current, 
       			"cases",
        		lv_cases_3_0, 
        		"DecisionCase");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_4='default' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDecisionExpressionAccess().getDefaultKeyword_4_0());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDecisionExpressionAccess().getColonKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDecisionExpressionAccess().getDefaultValueExprExpressionParserRuleCall_4_2_0()); 
	    }
		lv_defaultValueExpr_6_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecisionExpressionRule());
	        }
       		set(
       			$current, 
       			"defaultValueExpr",
        		lv_defaultValueExpr_6_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDecisionExpressionAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleDecisionCase
entryRuleDecisionCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecisionCaseRule()); }
	 iv_ruleDecisionCase=ruleDecisionCase 
	 { $current=$iv_ruleDecisionCase.current; } 
	 EOF 
;

// Rule DecisionCase
ruleDecisionCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDecisionCaseAccess().getCaseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDecisionCaseAccess().getGuardExprExpressionParserRuleCall_1_0()); 
	    }
		lv_guardExpr_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecisionCaseRule());
	        }
       		set(
       			$current, 
       			"guardExpr",
        		lv_guardExpr_1_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDecisionCaseAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDecisionCaseAccess().getValueExprExpressionParserRuleCall_3_0()); 
	    }
		lv_valueExpr_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecisionCaseRule());
	        }
       		set(
       			$current, 
       			"valueExpr",
        		lv_valueExpr_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCallbackExpressions
entryRuleCallbackExpressions returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCallbackExpressionsRule()); }
	 iv_ruleCallbackExpressions=ruleCallbackExpressions 
	 { $current=$iv_ruleCallbackExpressions.current; } 
	 EOF 
;

// Rule CallbackExpressions
ruleCallbackExpressions returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCallbackExpressionsAccess().getCallbackExpressionParserRuleCall_0()); 
    }
    this_CallbackExpression_0=ruleCallbackExpression
    { 
        $current = $this_CallbackExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCallbackExpressionsAccess().getCallbackResponseExpressionAction_1_0(),
            $current);
    }
)	otherlv_2='response' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCallbackExpressionsAccess().getResponseKeyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCallbackExpressionsAccess().getCallbackErrorResponseExpressionAction_2_0(),
            $current);
    }
)	otherlv_4='error' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCallbackExpressionsAccess().getErrorKeyword_2_1());
    }
))
;





// Entry rule entryRuleCallbackExpression
entryRuleCallbackExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCallbackExpressionRule()); }
	 iv_ruleCallbackExpression=ruleCallbackExpression 
	 { $current=$iv_ruleCallbackExpression.current; } 
	 EOF 
;

// Rule CallbackExpression
ruleCallbackExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getCallbackExpressionAccess().getStatementBlockStatementBlockParserRuleCall_0()); 
	    }
		lv_statementBlock_0_0=ruleStatementBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCallbackExpressionRule());
	        }
       		set(
       			$current, 
       			"statementBlock",
        		lv_statementBlock_0_0, 
        		"StatementBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleStructureCreationExpression
entryRuleStructureCreationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructureCreationExpressionRule()); }
	 iv_ruleStructureCreationExpression=ruleStructureCreationExpression 
	 { $current=$iv_ruleStructureCreationExpression.current; } 
	 EOF 
;

// Rule StructureCreationExpression
ruleStructureCreationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='new' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructureCreationExpressionAccess().getNewKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructureCreationExpressionRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getStructureCreationExpressionAccess().getStructureStructureCrossReference_1_0()); 
	}

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStructureCreationExpressionAccess().getLeftParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructureCreationExpressionAccess().getAssignmentsFeatureAssignmentParserRuleCall_3_0()); 
	    }
		lv_assignments_3_0=ruleFeatureAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureCreationExpressionRule());
	        }
       		add(
       			$current, 
       			"assignments",
        		lv_assignments_3_0, 
        		"FeatureAssignment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStructureCreationExpressionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleFeatureAssignment
entryRuleFeatureAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureAssignmentRule()); }
	 iv_ruleFeatureAssignment=ruleFeatureAssignment 
	 { $current=$iv_ruleFeatureAssignment.current; } 
	 EOF 
;

// Rule FeatureAssignment
ruleFeatureAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureAssignmentRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getFeatureAssignmentAccess().getFeatureFeatureCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFeatureAssignmentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAssignmentAccess().getValueExprExpressionParserRuleCall_2_0()); 
	    }
		lv_valueExpr_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureAssignmentRule());
	        }
       		set(
       			$current, 
       			"valueExpr",
        		lv_valueExpr_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValueReferenceOrMethodCallExpression
entryRuleValueReferenceOrMethodCallExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueReferenceOrMethodCallExpressionRule()); }
	 iv_ruleValueReferenceOrMethodCallExpression=ruleValueReferenceOrMethodCallExpression 
	 { $current=$iv_ruleValueReferenceOrMethodCallExpression.current; } 
	 EOF 
;

// Rule ValueReferenceOrMethodCallExpression
ruleValueReferenceOrMethodCallExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getValueReferenceOrMethodCallExpressionAccess().getReferenceExpressionParserRuleCall_0()); 
    }
    this_ReferenceExpression_0=ruleReferenceExpression
    { 
        $current = $this_ReferenceExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getValueReferenceOrMethodCallExpressionAccess().getMethodCallExpressionMethodRefAction_1_0(),
            $current);
    }
)((
(
ruleArgumentList
)
)=>
(
		{ 
	        newCompositeNode(grammarAccess.getValueReferenceOrMethodCallExpressionAccess().getArgumentListArgumentListParserRuleCall_1_1_0()); 
	    }
		lv_argumentList_2_0=ruleArgumentList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueReferenceOrMethodCallExpressionRule());
	        }
       		set(
       			$current, 
       			"argumentList",
        		lv_argumentList_2_0, 
        		"ArgumentList");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleReferenceExpression
entryRuleReferenceExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceExpressionRule()); }
	 iv_ruleReferenceExpression=ruleReferenceExpression 
	 { $current=$iv_ruleReferenceExpression.current; } 
	 EOF 
;

// Rule ReferenceExpression
ruleReferenceExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceExpressionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getReferenceExpressionAccess().getRefReferableCrossReference_0()); 
	}

)
)
;









// Entry rule entryRuleDefinedType
entryRuleDefinedType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinedTypeRule()); }
	 iv_ruleDefinedType=ruleDefinedType 
	 { $current=$iv_ruleDefinedType.current; } 
	 EOF 
;

// Rule DefinedType
ruleDefinedType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDefinedTypeAccess().getStructureDefinitionParserRuleCall_0()); 
    }
    this_StructureDefinition_0=ruleStructureDefinition
    { 
        $current = $this_StructureDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDefinedTypeAccess().getEnumerationDefinitionParserRuleCall_1()); 
    }
    this_EnumerationDefinition_1=ruleEnumerationDefinition
    { 
        $current = $this_EnumerationDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStructureDefinition
entryRuleStructureDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructureDefinitionRule()); }
	 iv_ruleStructureDefinition=ruleStructureDefinition 
	 { $current=$iv_ruleStructureDefinition.current; } 
	 EOF 
;

// Rule StructureDefinition
ruleStructureDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='structure' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructureDefinitionAccess().getStructureKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStructureDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructureDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		lv_persistent_2_0=	'persistent' 
    {
        newLeafNode(lv_persistent_2_0, grammarAccess.getStructureDefinitionAccess().getPersistentPersistentKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructureDefinitionRule());
	        }
       		setWithLastConsumed($current, "persistent", true, "persistent");
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStructureDefinitionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructureDefinitionAccess().getFeaturesFeatureParserRuleCall_4_0()); 
	    }
		lv_features_4_0=ruleFeature		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructureDefinitionRule());
	        }
       		add(
       			$current, 
       			"features",
        		lv_features_4_0, 
        		"Feature");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStructureDefinitionAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleFeature
entryRuleFeature returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureRule()); }
	 iv_ruleFeature=ruleFeature 
	 { $current=$iv_ruleFeature.current; } 
	 EOF 
;

// Rule Feature
ruleFeature returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(
(
		lv_optional_1_0=	'optional' 
    {
        newLeafNode(lv_optional_1_0, grammarAccess.getFeatureAccess().getOptionalOptionalKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFeatureRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFeatureAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureAccess().getTypeTypeLiteralParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleTypeLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"TypeLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumerationDefinition
entryRuleEnumerationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationDefinitionRule()); }
	 iv_ruleEnumerationDefinition=ruleEnumerationDefinition 
	 { $current=$iv_ruleEnumerationDefinition.current; } 
	 EOF 
;

// Rule EnumerationDefinition
ruleEnumerationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enumeration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumerationDefinitionAccess().getEnumerationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumerationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationDefinitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumerationDefinitionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationDefinitionAccess().getLiteralsEnumerationLiteralParserRuleCall_3_0()); 
	    }
		lv_literals_3_0=ruleEnumerationLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationDefinitionRule());
	        }
       		add(
       			$current, 
       			"literals",
        		lv_literals_3_0, 
        		"EnumerationLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumerationDefinitionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleEnumerationLiteral
entryRuleEnumerationLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationLiteralRule()); }
	 iv_ruleEnumerationLiteral=ruleEnumerationLiteral 
	 { $current=$iv_ruleEnumerationLiteral.current; } 
	 EOF 
;

// Rule EnumerationLiteral
ruleEnumerationLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationLiteralAccess().getNameEnumerationNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleEnumerationName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationLiteralRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"EnumerationName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumerationLiteralAccess().getHyphenMinusGreaterThanSignKeyword_1());
    }
(
(
		lv_displayName_2_0=RULE_STRING
		{
			newLeafNode(lv_displayName_2_0, grammarAccess.getEnumerationLiteralAccess().getDisplayNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"displayName",
        		lv_displayName_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleEnumerationName
entryRuleEnumerationName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationNameRule()); } 
	 iv_ruleEnumerationName=ruleEnumerationName 
	 { $current=$iv_ruleEnumerationName.current.getText(); }  
	 EOF 
;

// Rule EnumerationName
ruleEnumerationName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getEnumerationNameAccess().getIDTerminalRuleCall_0()); 
    }

    |    this_STRING_1=RULE_STRING    {
		$current.merge(this_STRING_1);
    }

    { 
    newLeafNode(this_STRING_1, grammarAccess.getEnumerationNameAccess().getSTRINGTerminalRuleCall_1()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getEnumerationNameAccess().getINTTerminalRuleCall_2()); 
    }
)
    ;





// Entry rule entryRuleTypeLiteral
entryRuleTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeLiteralRule()); }
	 iv_ruleTypeLiteral=ruleTypeLiteral 
	 { $current=$iv_ruleTypeLiteral.current; } 
	 EOF 
;

// Rule TypeLiteral
ruleTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeLiteralAccess().getBuiltinTypeLiteralParserRuleCall_0()); 
    }
    this_BuiltinTypeLiteral_0=ruleBuiltinTypeLiteral
    { 
        $current = $this_BuiltinTypeLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeLiteralAccess().getDefinedTypeLiteralParserRuleCall_1()); 
    }
    this_DefinedTypeLiteral_1=ruleDefinedTypeLiteral
    { 
        $current = $this_DefinedTypeLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeLiteralAccess().getListTypeLiteralParserRuleCall_2()); 
    }
    this_ListTypeLiteral_2=ruleListTypeLiteral
    { 
        $current = $this_ListTypeLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeLiteralAccess().getSyntheticTypeLiteralParserRuleCall_3()); 
    }
    this_SyntheticTypeLiteral_3=ruleSyntheticTypeLiteral
    { 
        $current = $this_SyntheticTypeLiteral_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBuiltinTypeLiteral
entryRuleBuiltinTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBuiltinTypeLiteralRule()); }
	 iv_ruleBuiltinTypeLiteral=ruleBuiltinTypeLiteral 
	 { $current=$iv_ruleBuiltinTypeLiteral.current; } 
	 EOF 
;

// Rule BuiltinTypeLiteral
ruleBuiltinTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getBuiltinTypeLiteralAccess().getBuiltinBuiltinTypesEnumRuleCall_0()); 
	    }
		lv_builtin_0_0=ruleBuiltinTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBuiltinTypeLiteralRule());
	        }
       		set(
       			$current, 
       			"builtin",
        		lv_builtin_0_0, 
        		"BuiltinTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleDefinedTypeLiteral
entryRuleDefinedTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinedTypeLiteralRule()); }
	 iv_ruleDefinedTypeLiteral=ruleDefinedTypeLiteral 
	 { $current=$iv_ruleDefinedTypeLiteral.current; } 
	 EOF 
;

// Rule DefinedTypeLiteral
ruleDefinedTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefinedTypeLiteralRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getDefinedTypeLiteralAccess().getTypeDefinedTypeCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleListTypeLiteral
entryRuleListTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListTypeLiteralRule()); }
	 iv_ruleListTypeLiteral=ruleListTypeLiteral 
	 { $current=$iv_ruleListTypeLiteral.current; } 
	 EOF 
;

// Rule ListTypeLiteral
ruleListTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getListTypeLiteralAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListTypeLiteralAccess().getItemTypeTypeLiteralParserRuleCall_1_0()); 
	    }
		lv_itemType_1_0=ruleTypeLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListTypeLiteralRule());
	        }
       		set(
       			$current, 
       			"itemType",
        		lv_itemType_1_0, 
        		"TypeLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getListTypeLiteralAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleSyntheticTypeLiteral
entryRuleSyntheticTypeLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSyntheticTypeLiteralRule()); }
	 iv_ruleSyntheticTypeLiteral=ruleSyntheticTypeLiteral 
	 { $current=$iv_ruleSyntheticTypeLiteral.current; } 
	 EOF 
;

// Rule SyntheticTypeLiteral
ruleSyntheticTypeLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSyntheticTypeLiteralAccess().getCallbackLiteralAction_0_0(),
            $current);
    }
)	otherlv_1='Callback' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSyntheticTypeLiteralAccess().getCallbackKeyword_0_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSyntheticTypeLiteralAccess().getCallbackErrorResponseLiteralAction_1_0(),
            $current);
    }
)	otherlv_3='Error' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSyntheticTypeLiteralAccess().getErrorKeyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSyntheticTypeLiteralAccess().getVoidLiteralAction_2_0(),
            $current);
    }
)	otherlv_5='$Void' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSyntheticTypeLiteralAccess().getVoidKeyword_2_1());
    }
))
;





// Rule ViewableTypes
ruleViewableTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='screen' 
	{
        $current = grammarAccess.getViewableTypesAccess().getScreenEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getViewableTypesAccess().getScreenEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='component' 
	{
        $current = grammarAccess.getViewableTypesAccess().getComponentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getViewableTypesAccess().getComponentEnumLiteralDeclaration_1()); 
    }
));



// Rule ValueTypes
ruleValueTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='=' 
	{
        $current = grammarAccess.getValueTypesAccess().getVariableEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getValueTypesAccess().getVariableEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='<-' 
	{
        $current = grammarAccess.getValueTypesAccess().getDerivedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getValueTypesAccess().getDerivedEnumLiteralDeclaration_1()); 
    }
));



// Rule GroupOrientations
ruleGroupOrientations returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='vertical' 
	{
        $current = grammarAccess.getGroupOrientationsAccess().getVerticalEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getGroupOrientationsAccess().getVerticalEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='horizontal' 
	{
        $current = grammarAccess.getGroupOrientationsAccess().getHorizontalEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getGroupOrientationsAccess().getHorizontalEnumLiteralDeclaration_1()); 
    }
));



// Rule VerticalAlignment
ruleVerticalAlignment returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='top' 
	{
        $current = grammarAccess.getVerticalAlignmentAccess().getTopEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getVerticalAlignmentAccess().getTopEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='bottom' 
	{
        $current = grammarAccess.getVerticalAlignmentAccess().getBottomEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getVerticalAlignmentAccess().getBottomEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='middle' 
	{
        $current = grammarAccess.getVerticalAlignmentAccess().getMiddleEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getVerticalAlignmentAccess().getMiddleEnumLiteralDeclaration_2()); 
    }
));



// Rule AssignmentOperator
ruleAssignmentOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='=' 
	{
        $current = grammarAccess.getAssignmentOperatorAccess().getAssignEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAssignmentOperatorAccess().getAssignEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='+=' 
	{
        $current = grammarAccess.getAssignmentOperatorAccess().getAddEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAssignmentOperatorAccess().getAddEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='-=' 
	{
        $current = grammarAccess.getAssignmentOperatorAccess().getSubEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getAssignmentOperatorAccess().getSubEnumLiteralDeclaration_2()); 
    }
));



// Rule Comparator
ruleComparator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='==' 
	{
        $current = grammarAccess.getComparatorAccess().getEqualsEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getComparatorAccess().getEqualsEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='!=' 
	{
        $current = grammarAccess.getComparatorAccess().getNotEqualsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getComparatorAccess().getNotEqualsEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='>' 
	{
        $current = grammarAccess.getComparatorAccess().getBiggerEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getComparatorAccess().getBiggerEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='>=' 
	{
        $current = grammarAccess.getComparatorAccess().getBiggerEqualsEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getComparatorAccess().getBiggerEqualsEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='<' 
	{
        $current = grammarAccess.getComparatorAccess().getSmallerEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getComparatorAccess().getSmallerEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='<=' 
	{
        $current = grammarAccess.getComparatorAccess().getSmallerEqualsEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getComparatorAccess().getSmallerEqualsEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='in' 
	{
        $current = grammarAccess.getComparatorAccess().getIsInEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getComparatorAccess().getIsInEnumLiteralDeclaration_6()); 
    }
));



// Rule AdditiveOperators
ruleAdditiveOperators returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='+' 
	{
        $current = grammarAccess.getAdditiveOperatorsAccess().getPlusEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getAdditiveOperatorsAccess().getPlusEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='-' 
	{
        $current = grammarAccess.getAdditiveOperatorsAccess().getMinusEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getAdditiveOperatorsAccess().getMinusEnumLiteralDeclaration_1()); 
    }
));



// Rule MultiplicativeOperators
ruleMultiplicativeOperators returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='*' 
	{
        $current = grammarAccess.getMultiplicativeOperatorsAccess().getMultEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getMultiplicativeOperatorsAccess().getMultEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='/' 
	{
        $current = grammarAccess.getMultiplicativeOperatorsAccess().getDivEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getMultiplicativeOperatorsAccess().getDivEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='%' 
	{
        $current = grammarAccess.getMultiplicativeOperatorsAccess().getModEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getMultiplicativeOperatorsAccess().getModEnumLiteralDeclaration_2()); 
    }
));



// Rule CrudTypes
ruleCrudTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='create' 
	{
        $current = grammarAccess.getCrudTypesAccess().getCreateEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCrudTypesAccess().getCreateEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='get-by-id' 
	{
        $current = grammarAccess.getCrudTypesAccess().getGetByIdEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCrudTypesAccess().getGetByIdEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='update' 
	{
        $current = grammarAccess.getCrudTypesAccess().getUpdateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCrudTypesAccess().getUpdateEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='delete' 
	{
        $current = grammarAccess.getCrudTypesAccess().getDeleteEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getCrudTypesAccess().getDeleteEnumLiteralDeclaration_3()); 
    }
));



// Rule BuiltinFunctions
ruleBuiltinFunctions returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='isSet' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getIsSetEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBuiltinFunctionsAccess().getIsSetEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='alert' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getAlertEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBuiltinFunctionsAccess().getAlertEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='confirm' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getConfirmEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getBuiltinFunctionsAccess().getConfirmEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='copyOf' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getCopyOfEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getBuiltinFunctionsAccess().getCopyOfEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='toMillis' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getToMillisEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getBuiltinFunctionsAccess().getToMillisEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='round' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getRoundEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getBuiltinFunctionsAccess().getRoundEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='sort' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getSortEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getBuiltinFunctionsAccess().getSortEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='isValid' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getIsValidEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getBuiltinFunctionsAccess().getIsValidEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='id' 
	{
        $current = grammarAccess.getBuiltinFunctionsAccess().getIdEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getBuiltinFunctionsAccess().getIdEnumLiteralDeclaration_8()); 
    }
));



// Rule BooleanLiterals
ruleBooleanLiterals returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='false' 
	{
        $current = grammarAccess.getBooleanLiteralsAccess().getFalseEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBooleanLiteralsAccess().getFalseEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='true' 
	{
        $current = grammarAccess.getBooleanLiteralsAccess().getTrueEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBooleanLiteralsAccess().getTrueEnumLiteralDeclaration_1()); 
    }
));



// Rule BuiltinTypes
ruleBuiltinTypes returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='String' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBuiltinTypesAccess().getStringEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Boolean' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getBooleanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBuiltinTypesAccess().getBooleanEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Integer' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getIntegerEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getBuiltinTypesAccess().getIntegerEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='URL' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getUrlEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getBuiltinTypesAccess().getUrlEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='Text' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getTextEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getBuiltinTypesAccess().getTextEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='Number' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getNumberEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getBuiltinTypesAccess().getNumberEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='Email' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getEmailEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getBuiltinTypesAccess().getEmailEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='Phone' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getPhoneEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getBuiltinTypesAccess().getPhoneEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='Date' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getDateEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getBuiltinTypesAccess().getDateEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='Password' 
	{
        $current = grammarAccess.getBuiltinTypesAccess().getPasswordEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getBuiltinTypesAccess().getPasswordEnumLiteralDeclaration_9()); 
    }
));



RULE_INT : '-'? ('0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


